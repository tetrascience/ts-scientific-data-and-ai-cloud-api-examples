{
	"info": {
		"_postman_id": "f15be37b-cb12-4c69-854d-a7e972c125fb",
		"name": "Tetrascience Developer API Postman Collection",
		"description": "# Developer API Postman Collection\n\nThis collection houses API calls for the endpoints on our API developer portal.\n\n## How to use?\n\n- Make a copy of the collection specific to your customer\n- Click Edit nex to the collection\n    \n- Update the variables section under the current value section\n    \n- For the access token, create a service user and obtain the access token from TDP\n    \n- The pre-request script will create the headers for authorization purposes.\n    \n\n## Editing the collection\n\n<img src=\"https://content.pstmn.io/2111e9cc-6cfa-4d76-bd72-96203e817e3d/U2NyZWVuc2hvdCAyMDIzLTA4LTI0IGF0IDEwLjI0LjMyIEFNLnBuZw==\" alt=\"\">\n\n## Updating the variables\n\n<img src=\"https://content.pstmn.io/ababd218-84a0-4d28-ba79-852c36660a79/U2NyZWVuc2hvdCAyMDIzLTA4LTI0IGF0IDEwLjI1LjIwIEFNLnBuZw==\" alt=\"\" height=\"291\" width=\"618\">\n\n## Pre-request Scripts\n\n<img src=\"https://content.pstmn.io/e09fbf9d-16dd-43ba-add3-a39e218c2f38/U2NyZWVuc2hvdCAyMDIzLTA4LTI0IGF0IDEwLjI2LjE4IEFNLnBuZw==\" alt=\"\">",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27209106",
		"_collection_link": "https://tetrascience.postman.co/workspace/8f064ff4-a6e5-4370-876d-1c427f343d87/collection/27209106-f15be37b-cb12-4c69-854d-a7e972c125fb?action=share&source=collection_link&creator=27209106"
	},
	"item": [
		{
			"name": "Pipelines External v1",
			"item": [
				{
					"name": "pipeline",
					"item": [
						{
							"name": "Get Details of a Single Pipeline",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/pipeline/:pipelineId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pipeline",
										":pipelineId"
									],
									"variable": [
										{
											"key": "pipelineId",
											"value": "<string>",
											"description": "(Required) Required.  UUID of the pipeline that you want get information about."
										}
									]
								},
								"description": "Search data pipeline workflows"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/:pipelineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												":pipelineId"
											],
											"variable": [
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "(Required) Required.  UUID of the pipeline that you want get information about."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"triggerType\": \"<string>\",\n  \"triggerCondition\": {\n    \"groupOperator\": \"<string>\",\n    \"groupLevel\": 0,\n    \"groups\": [\n      {\n        \"groupLevel\": 0,\n        \"groupOperator\": \"<string>\",\n        \"groups\": [\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"groupLevel\": 0,\n        \"groupOperator\": \"<string>\",\n        \"groups\": [\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"protocolSlug\": \"<string>\",\n  \"protocolVersion\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"pipelineConfig\": {\n    \"notificationsConfig\": {\n      \"sendOnSuccessful\": true,\n      \"sendOnFailed\": true,\n      \"notificationEmailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"masterScriptNamespace\": \"<string>\",\n  \"masterScriptSlug\": \"<string>\",\n  \"masterScriptVersion\": \"<string>\",\n  \"status\": {},\n  \"standby\": 0,\n  \"retryBehavior\": {}\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/:pipelineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												":pipelineId"
											],
											"variable": [
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "(Required) Required.  UUID of the pipeline that you want get information about."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create New Pipeline",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/pipeline/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pipeline",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"triggerType\": \"<string>\",\n  \"triggerCondition\": {\n    \"groupOperator\": \"<string>\",\n    \"groupLevel\": 0,\n    \"groups\": [\n      {\n        \"groupLevel\": 0,\n        \"groupOperator\": \"<string>\",\n        \"groups\": [\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"groupLevel\": 0,\n        \"groupOperator\": \"<string>\",\n        \"groups\": [\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"protocolSlug\": \"<string>\",\n  \"protocolVersion\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"pipelineConfig\": {\n    \"notificationsConfig\": {\n      \"sendOnSuccessful\": true,\n      \"sendOnFailed\": true,\n      \"notificationEmailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"masterScriptNamespace\": \"<string>\",\n  \"masterScriptSlug\": \"<string>\",\n  \"masterScriptVersion\": \"<string>\",\n  \"status\": {},\n  \"standby\": 0,\n  \"retryBehavior\": {}\n}"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"create"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Existing Pipeline",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/pipeline/update/:pipelineId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pipeline",
										"update",
										":pipelineId"
									],
									"variable": [
										{
											"key": "pipelineId",
											"value": "<string>",
											"description": "(Required) Required.  UUID of the pipeline that you want update."
										}
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/update/:pipelineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"update",
												":pipelineId"
											],
											"variable": [
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "(Required) Required.  UUID of the pipeline that you want update."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"triggerType\": \"<string>\",\n  \"triggerCondition\": {\n    \"groupOperator\": \"<string>\",\n    \"groupLevel\": 0,\n    \"groups\": [\n      {\n        \"groupLevel\": 0,\n        \"groupOperator\": \"<string>\",\n        \"groups\": [\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"groupLevel\": 0,\n        \"groupOperator\": \"<string>\",\n        \"groups\": [\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"key\": \"<string>\",\n            \"operator\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ]\n  },\n  \"protocolSlug\": \"<string>\",\n  \"protocolVersion\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\",\n  \"pipelineConfig\": {\n    \"notificationsConfig\": {\n      \"sendOnSuccessful\": true,\n      \"sendOnFailed\": true,\n      \"notificationEmailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  },\n  \"masterScriptNamespace\": \"<string>\",\n  \"masterScriptSlug\": \"<string>\",\n  \"masterScriptVersion\": \"<string>\",\n  \"status\": \"<string>\",\n  \"standby\": 0,\n  \"retryBehavior\": {}\n}"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/update/:pipelineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"update",
												":pipelineId"
											],
											"variable": [
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "(Required) Required.  UUID of the pipeline that you want update."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"validation\": {\n    \"source\": \"<string>\",\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/update/:pipelineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"update",
												":pipelineId"
											],
											"variable": [
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "(Required) Required.  UUID of the pipeline that you want update."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Process List of Files with Pipeline",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileIds\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/pipeline/process/:pipelineId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pipeline",
										"process",
										":pipelineId"
									],
									"variable": [
										{
											"key": "pipelineId",
											"value": "<string>",
											"description": "(Required) Required. UUID of the pipeline that will process the files."
										}
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileIds\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/process/:pipelineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"process",
												":pipelineId"
											],
											"variable": [
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "(Required) Required. UUID of the pipeline that will process the files."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": [\n    {\n      \"fileId\": \"<string>\",\n      \"workflowId\": \"<string>\"\n    },\n    {\n      \"fileId\": \"<string>\",\n      \"workflowId\": \"<string>\"\n    }\n  ],\n  \"error\": \"<array>\"\n}"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileIds\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/process/:pipelineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"process",
												":pipelineId"
											],
											"variable": [
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "(Required) Required. UUID of the pipeline that will process the files."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileIds\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/process/:pipelineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"process",
												":pipelineId"
											],
											"variable": [
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "(Required) Required. UUID of the pipeline that will process the files."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"validation\": {\n    \"source\": \"<string>\",\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "500",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileIds\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/process/:pipelineId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"process",
												":pipelineId"
											],
											"variable": [
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "(Required) Required. UUID of the pipeline that will process the files."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Search Pipelines",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/pipeline/search?from=<string>&order=<string>&pipelineStatus=<string>&pipelineNameOrId=<string>&protocolName=<string>&protocolNamespace=<string>&protocolVersion=<string>&size=<integer>&sortBy=<string>&startTime=<string>&endTime=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pipeline",
										"search"
									],
									"query": [
										{
											"key": "from",
											"value": "<string>",
											"description": "Optional.  Paging index. Starts with zero."
										},
										{
											"key": "order",
											"value": "<string>",
											"description": "Optional.  Options are asc, desc.   asc is ascending and desc is descending.  The default is desc.  Note that the specific ordering data type is based on what is given in sortBy field."
										},
										{
											"key": "pipelineStatus",
											"value": "<string>",
											"description": "Filter results by pipelines enable/disable state. Possible values are: enabled, disabled, all.  The Default is all.  All does not filter on by enable/disable state, all pipelines that meet other search criteria will be returned."
										},
										{
											"key": "pipelineNameOrId",
											"value": "<string>",
											"description": "Optional. Find pipelines that have the given string in its name or the pipelineId. _For PipelineId_: Full string match of pipeline UUID. No fuzzy search. Case insensitive search. _For Pipeline name_: Fuzzy search: Partial string match with pipeline name. Case insensitive search."
										},
										{
											"key": "protocolName",
											"value": "<string>",
											"description": "Optional. Find pipelines that have the given string in their protocol name. Case insensitive search."
										},
										{
											"key": "protocolNamespace",
											"value": "<string>",
											"description": "Optional. Find pipelines that are in the given namespace.  Must be one of the following: common, client, or private."
										},
										{
											"key": "protocolVersion",
											"value": "<string>",
											"description": "Optional.  Find pipelines that use a specific version of a protocol, the latest version, or all versions. Must have protocolName. Following are the valid options: **all** - detail list of all versions  **latest** - Only the newest version as determined by the largest numbering vX.Y.Z  **vX.Y.X** - specific version of protocol Default is **all**."
										},
										{
											"key": "size",
											"value": "<integer>",
											"description": "Optional.  Number of results to return starting from the page index given in the “from” parameter.  Default is 10, Max is 100."
										},
										{
											"key": "sortBy",
											"value": "<string>",
											"description": "Optional. Indicates the sorting field. Can be one of the following: pipelineName, protocolName, lastConfigUpdate, createDate.  The default is the lastConfigUpdate."
										},
										{
											"key": "startTime",
											"value": "<string>",
											"description": "Optional.  Provides a lower bound time range on the pipeline’s lastConfigUpdate field. If not specified, there are no defaults and the filter is not applied. If supplied, the value must be ISO format only."
										},
										{
											"key": "endTime",
											"value": "<string>",
											"description": "Optional.  Provides an upper bound time range on the pipeline’s lastConfigUpdate field. If not specified, there are no defaults and the filter is not applied. If supplied, the value must be ISO format only."
										}
									]
								},
								"description": "Search pipelines"
							},
							"response": []
						},
						{
							"name": "Process Files - draft",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fields\": \"<json>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/pipeline/pipelines/:pipelineID/reprocess",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pipeline",
										"pipelines",
										":pipelineID",
										"reprocess"
									],
									"variable": [
										{
											"key": "pipelineID",
											"value": "<string>",
											"description": "(Required) Pipeline UUID"
										}
									]
								},
								"description": "Search data pipeline workflows"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fields\": \"<json>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/pipeline/pipelines/:pipelineID/reprocess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pipeline",
												"pipelines",
												":pipelineID",
												"reprocess"
											],
											"variable": [
												{
													"key": "pipelineID",
													"value": "<string>",
													"description": "(Required) Pipeline UUID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"successful\": [\n    {\n      \"fileId\": \"<string>\",\n      \"workflowId\": \"<string>\"\n    },\n    {\n      \"fileId\": \"<string>\",\n      \"workflowId\": \"<string>\"\n    }\n  ],\n  \"errored\": [\n    {\n      \"fileId\": \"<string>\",\n      \"error\": \"<string>\"\n    },\n    {\n      \"fileId\": \"<string>\",\n      \"error\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "workflow",
					"item": [
						{
							"name": "Search Workflow",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/workflow/search?size=<string>&from=<string>&filter=<string>&pipelineId=<string>&startTime=<dateTime>&endTime=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"workflow",
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "<string>",
											"description": "Optional.  Number of results to return starting from the page index given in the “from” parameter.  Default: 10 Max: 100"
										},
										{
											"key": "from",
											"value": "<string>",
											"description": "Optional.  Paging index. Starts with zero. Default: 0"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "Optional. Filter by the workflow completion status. Possible values are:  1. all - for all the workflows (pending, in-progress, completed, failed).  2.  failed - for the workflows that failed.  3. completed - for the workflows that completed successfully.  4. pending - for workflows waiting to be scheduled.  5.  in-progress - for workflows that are executing.  Default: all"
										},
										{
											"key": "pipelineId",
											"value": "<string>",
											"description": "Optional. UUID of the pipeline. If provided, only the workflows associated with this pipelineid are retrieved. Otherwise, the workflows from all the pipelines are retrieved."
										},
										{
											"key": "startTime",
											"value": "<dateTime>",
											"description": "Optional.  If provided, service returns all the workflows created after this time. Value can be ISO format only with or without hours, minutes, seconds. If value is just a date without hours, minutes and second, timestamp will be defaulted to 00:00:00 for given date."
										},
										{
											"key": "endTime",
											"value": "<dateTime>",
											"description": "Optional. If provided, service returns all the workflows created before this time. Value can be ISO format only with or without hours, minutes, seconds. If value is just a date without hours, minutes and second, timestamp will be defaulted to 00:00:00 for given date."
										}
									]
								},
								"description": "Search data pipeline workflows"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/workflow/search?size=<string>&from=<string>&filter=<string>&pipelineId=<string>&startTime=<dateTime>&endTime=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"workflow",
												"search"
											],
											"query": [
												{
													"key": "size",
													"value": "<string>"
												},
												{
													"key": "from",
													"value": "<string>"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "pipelineId",
													"value": "<string>"
												},
												{
													"key": "startTime",
													"value": "<dateTime>"
												},
												{
													"key": "endTime",
													"value": "<dateTime>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"from\": 0,\n  \"size\": 0,\n  \"hasNext\": true,\n  \"hits\": [\n    {\n      \"id\": \"<string>\",\n      \"orgSlug\": \"<string>\",\n      \"pipelineId\": \"<string>\",\n      \"masterScriptNamespace\": \"<string>\",\n      \"masterScriptSlug\": \"<string>\",\n      \"masterScriptVersion\": \"<string>\",\n      \"protocolSlug\": \"<string>\",\n      \"protocolVersion\": \"<string>\",\n      \"protocol\": {\n        \"protocolSchema\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"steps\": [\n          {\n            \"slug\": \"<string>\",\n            \"description\": \"<string>\",\n            \"type\": \"<string>\",\n            \"script\": {\n              \"namespace\": \"<string>\",\n              \"slug\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"functionSlug\": \"<string>\"\n          },\n          {\n            \"slug\": \"<string>\",\n            \"description\": \"<string>\",\n            \"type\": \"<string>\",\n            \"script\": {\n              \"namespace\": \"<string>\",\n              \"slug\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"functionSlug\": \"<string>\"\n          }\n        ],\n        \"config\": \"<array>\"\n      },\n      \"pipelineConfig\": {\n        \"notificationsConfig\": {\n          \"sendOnSuccessful\": true,\n          \"sendOnFailed\": true,\n          \"notificationEmailAddresses\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"pipelineName\": \"<string>\"\n      },\n      \"inputFile\": {\n        \"meta\": {\n          \"fileId\": \"<string>\",\n          \"source\": {\n            \"box\": {\n              \"id\": \"<string>\",\n              \"size\": 0,\n              \"filePath\": \"<string>\",\n              \"integrationSource\": \"<string>\"\n            },\n            \"type\": \"<string>\"\n          },\n          \"traceId\": \"<string>\",\n          \"sourceId\": \"<string>\",\n          \"sourceName\": \"<string>\",\n          \"sourceType\": \"<string>\",\n          \"integrationId\": \"<string>\",\n          \"integrationType\": \"<string>\"\n        },\n        \"type\": \"<string>\",\n        \"bucket\": \"<string>\",\n        \"fileId\": \"<string>\",\n        \"fileKey\": \"<string>\",\n        \"version\": \"<string>\",\n        \"customTags\": \"<array>\",\n        \"customMetadata\": {}\n      },\n      \"tasks\": [\n        {\n          \"slug\": \"<string>\",\n          \"input\": {\n            \"input_file\": {\n              \"meta\": {\n                \"fileId\": \"<string>\",\n                \"source\": {\n                  \"box\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                \"traceId\": \"<string>\",\n                \"sourceId\": \"<string>\",\n                \"sourceName\": \"<string>\",\n                \"sourceType\": \"<string>\",\n                \"integrationId\": \"<string>\",\n                \"integrationType\": \"<string>\"\n              },\n              \"type\": \"<string>\",\n              \"bucket\": \"<string>\",\n              \"fileId\": \"<string>\",\n              \"fileKey\": \"<string>\",\n              \"version\": \"<string>\",\n              \"customTags\": \"<array>\",\n              \"customMetadata\": {}\n            }\n          },\n          \"retry\": 0,\n          \"events\": [\n            {\n              \"at\": \"<string>\",\n              \"status\": \"<string>\"\n            },\n            {\n              \"at\": \"<string>\",\n              \"status\": \"<string>\"\n            }\n          ],\n          \"output\": {\n            \"type\": \"<string>\",\n            \"result\": [\n              {\n                \"type\": \"<string>\",\n                \"bucket\": \"<string>\",\n                \"fileId\": \"<string>\",\n                \"fileKey\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              {\n                \"type\": \"<string>\",\n                \"bucket\": \"<string>\",\n                \"fileId\": \"<string>\",\n                \"fileKey\": \"<string>\",\n                \"version\": \"<string>\"\n              }\n            ]\n          },\n          \"script\": {\n            \"list\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"slug\": \"<string>\",\n            \"docker\": {\n              \"image\": \"<string>\"\n            },\n            \"version\": \"<string>\",\n            \"language\": \"<string>\",\n            \"maxCount\": 0,\n            \"createdAt\": \"<string>\",\n            \"functions\": [\n              {\n                \"slug\": \"<string>\",\n                \"function\": \"<string>\"\n              },\n              {\n                \"slug\": \"<string>\",\n                \"function\": \"<string>\"\n              }\n            ],\n            \"hasSource\": true,\n            \"namespace\": \"<string>\",\n            \"timestamp\": 0,\n            \"runnerType\": \"<string>\",\n            \"buildLogSaved\": true,\n            \"buildDurationMs\": 0\n          },\n          \"status\": \"<string>\",\n          \"taskId\": \"<string>\",\n          \"options\": {},\n          \"createdAt\": \"<string>\",\n          \"containerId\": \"<string>\",\n          \"functionSlug\": \"<string>\",\n          \"lastUpdatedAt\": \"<string>\",\n          \"taskMemoryInMB\": 0,\n          \"cloudWatchUrl\": \"<string>\"\n        },\n        {\n          \"slug\": \"<string>\",\n          \"input\": {\n            \"input_file\": {\n              \"meta\": {\n                \"fileId\": \"<string>\",\n                \"source\": {\n                  \"box\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                \"traceId\": \"<string>\",\n                \"sourceId\": \"<string>\",\n                \"sourceName\": \"<string>\",\n                \"sourceType\": \"<string>\",\n                \"integrationId\": \"<string>\",\n                \"integrationType\": \"<string>\"\n              },\n              \"type\": \"<string>\",\n              \"bucket\": \"<string>\",\n              \"fileId\": \"<string>\",\n              \"fileKey\": \"<string>\",\n              \"version\": \"<string>\",\n              \"customTags\": \"<array>\",\n              \"customMetadata\": {}\n            }\n          },\n          \"retry\": 0,\n          \"events\": [\n            {\n              \"at\": \"<string>\",\n              \"status\": \"<string>\"\n            },\n            {\n              \"at\": \"<string>\",\n              \"status\": \"<string>\"\n            }\n          ],\n          \"output\": {\n            \"type\": \"<string>\",\n            \"result\": [\n              {\n                \"type\": \"<string>\",\n                \"bucket\": \"<string>\",\n                \"fileId\": \"<string>\",\n                \"fileKey\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              {\n                \"type\": \"<string>\",\n                \"bucket\": \"<string>\",\n                \"fileId\": \"<string>\",\n                \"fileKey\": \"<string>\",\n                \"version\": \"<string>\"\n              }\n            ]\n          },\n          \"script\": {\n            \"list\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"slug\": \"<string>\",\n            \"docker\": {\n              \"image\": \"<string>\"\n            },\n            \"version\": \"<string>\",\n            \"language\": \"<string>\",\n            \"maxCount\": 0,\n            \"createdAt\": \"<string>\",\n            \"functions\": [\n              {\n                \"slug\": \"<string>\",\n                \"function\": \"<string>\"\n              },\n              {\n                \"slug\": \"<string>\",\n                \"function\": \"<string>\"\n              }\n            ],\n            \"hasSource\": true,\n            \"namespace\": \"<string>\",\n            \"timestamp\": 0,\n            \"runnerType\": \"<string>\",\n            \"buildLogSaved\": true,\n            \"buildDurationMs\": 0\n          },\n          \"status\": \"<string>\",\n          \"taskId\": \"<string>\",\n          \"options\": {},\n          \"createdAt\": \"<string>\",\n          \"containerId\": \"<string>\",\n          \"functionSlug\": \"<string>\",\n          \"lastUpdatedAt\": \"<string>\",\n          \"taskMemoryInMB\": 0,\n          \"cloudWatchUrl\": \"<string>\"\n        }\n      ],\n      \"supersededTasks\": \"<array>\",\n      \"status\": \"<string>\",\n      \"events\": [\n        {\n          \"at\": \"<string>\",\n          \"status\": \"<string>\"\n        },\n        {\n          \"at\": \"<string>\",\n          \"status\": \"<string>\"\n        }\n      ],\n      \"createdAt\": \"<string>\",\n      \"lastUpdatedAt\": \"<string>\",\n      \"restarted\": true,\n      \"masterScriptLogs\": \"<array>\",\n      \"retryBehavior\": {},\n      \"output\": {\n        \"type\": \"<string>\",\n        \"result\": [\n          {\n            \"type\": \"<string>\",\n            \"bucket\": \"<string>\",\n            \"fileId\": \"<string>\",\n            \"fileKey\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"bucket\": \"<string>\",\n            \"fileId\": \"<string>\",\n            \"fileKey\": \"<string>\",\n            \"version\": \"<string>\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"orgSlug\": \"<string>\",\n      \"pipelineId\": \"<string>\",\n      \"masterScriptNamespace\": \"<string>\",\n      \"masterScriptSlug\": \"<string>\",\n      \"masterScriptVersion\": \"<string>\",\n      \"protocolSlug\": \"<string>\",\n      \"protocolVersion\": \"<string>\",\n      \"protocol\": {\n        \"protocolSchema\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"steps\": [\n          {\n            \"slug\": \"<string>\",\n            \"description\": \"<string>\",\n            \"type\": \"<string>\",\n            \"script\": {\n              \"namespace\": \"<string>\",\n              \"slug\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"functionSlug\": \"<string>\"\n          },\n          {\n            \"slug\": \"<string>\",\n            \"description\": \"<string>\",\n            \"type\": \"<string>\",\n            \"script\": {\n              \"namespace\": \"<string>\",\n              \"slug\": \"<string>\",\n              \"version\": \"<string>\"\n            },\n            \"functionSlug\": \"<string>\"\n          }\n        ],\n        \"config\": \"<array>\"\n      },\n      \"pipelineConfig\": {\n        \"notificationsConfig\": {\n          \"sendOnSuccessful\": true,\n          \"sendOnFailed\": true,\n          \"notificationEmailAddresses\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"pipelineName\": \"<string>\"\n      },\n      \"inputFile\": {\n        \"meta\": {\n          \"fileId\": \"<string>\",\n          \"source\": {\n            \"box\": {\n              \"id\": \"<string>\",\n              \"size\": 0,\n              \"filePath\": \"<string>\",\n              \"integrationSource\": \"<string>\"\n            },\n            \"type\": \"<string>\"\n          },\n          \"traceId\": \"<string>\",\n          \"sourceId\": \"<string>\",\n          \"sourceName\": \"<string>\",\n          \"sourceType\": \"<string>\",\n          \"integrationId\": \"<string>\",\n          \"integrationType\": \"<string>\"\n        },\n        \"type\": \"<string>\",\n        \"bucket\": \"<string>\",\n        \"fileId\": \"<string>\",\n        \"fileKey\": \"<string>\",\n        \"version\": \"<string>\",\n        \"customTags\": \"<array>\",\n        \"customMetadata\": {}\n      },\n      \"tasks\": [\n        {\n          \"slug\": \"<string>\",\n          \"input\": {\n            \"input_file\": {\n              \"meta\": {\n                \"fileId\": \"<string>\",\n                \"source\": {\n                  \"box\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                \"traceId\": \"<string>\",\n                \"sourceId\": \"<string>\",\n                \"sourceName\": \"<string>\",\n                \"sourceType\": \"<string>\",\n                \"integrationId\": \"<string>\",\n                \"integrationType\": \"<string>\"\n              },\n              \"type\": \"<string>\",\n              \"bucket\": \"<string>\",\n              \"fileId\": \"<string>\",\n              \"fileKey\": \"<string>\",\n              \"version\": \"<string>\",\n              \"customTags\": \"<array>\",\n              \"customMetadata\": {}\n            }\n          },\n          \"retry\": 0,\n          \"events\": [\n            {\n              \"at\": \"<string>\",\n              \"status\": \"<string>\"\n            },\n            {\n              \"at\": \"<string>\",\n              \"status\": \"<string>\"\n            }\n          ],\n          \"output\": {\n            \"type\": \"<string>\",\n            \"result\": [\n              {\n                \"type\": \"<string>\",\n                \"bucket\": \"<string>\",\n                \"fileId\": \"<string>\",\n                \"fileKey\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              {\n                \"type\": \"<string>\",\n                \"bucket\": \"<string>\",\n                \"fileId\": \"<string>\",\n                \"fileKey\": \"<string>\",\n                \"version\": \"<string>\"\n              }\n            ]\n          },\n          \"script\": {\n            \"list\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"slug\": \"<string>\",\n            \"docker\": {\n              \"image\": \"<string>\"\n            },\n            \"version\": \"<string>\",\n            \"language\": \"<string>\",\n            \"maxCount\": 0,\n            \"createdAt\": \"<string>\",\n            \"functions\": [\n              {\n                \"slug\": \"<string>\",\n                \"function\": \"<string>\"\n              },\n              {\n                \"slug\": \"<string>\",\n                \"function\": \"<string>\"\n              }\n            ],\n            \"hasSource\": true,\n            \"namespace\": \"<string>\",\n            \"timestamp\": 0,\n            \"runnerType\": \"<string>\",\n            \"buildLogSaved\": true,\n            \"buildDurationMs\": 0\n          },\n          \"status\": \"<string>\",\n          \"taskId\": \"<string>\",\n          \"options\": {},\n          \"createdAt\": \"<string>\",\n          \"containerId\": \"<string>\",\n          \"functionSlug\": \"<string>\",\n          \"lastUpdatedAt\": \"<string>\",\n          \"taskMemoryInMB\": 0,\n          \"cloudWatchUrl\": \"<string>\"\n        },\n        {\n          \"slug\": \"<string>\",\n          \"input\": {\n            \"input_file\": {\n              \"meta\": {\n                \"fileId\": \"<string>\",\n                \"source\": {\n                  \"box\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                \"traceId\": \"<string>\",\n                \"sourceId\": \"<string>\",\n                \"sourceName\": \"<string>\",\n                \"sourceType\": \"<string>\",\n                \"integrationId\": \"<string>\",\n                \"integrationType\": \"<string>\"\n              },\n              \"type\": \"<string>\",\n              \"bucket\": \"<string>\",\n              \"fileId\": \"<string>\",\n              \"fileKey\": \"<string>\",\n              \"version\": \"<string>\",\n              \"customTags\": \"<array>\",\n              \"customMetadata\": {}\n            }\n          },\n          \"retry\": 0,\n          \"events\": [\n            {\n              \"at\": \"<string>\",\n              \"status\": \"<string>\"\n            },\n            {\n              \"at\": \"<string>\",\n              \"status\": \"<string>\"\n            }\n          ],\n          \"output\": {\n            \"type\": \"<string>\",\n            \"result\": [\n              {\n                \"type\": \"<string>\",\n                \"bucket\": \"<string>\",\n                \"fileId\": \"<string>\",\n                \"fileKey\": \"<string>\",\n                \"version\": \"<string>\"\n              },\n              {\n                \"type\": \"<string>\",\n                \"bucket\": \"<string>\",\n                \"fileId\": \"<string>\",\n                \"fileKey\": \"<string>\",\n                \"version\": \"<string>\"\n              }\n            ]\n          },\n          \"script\": {\n            \"list\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"slug\": \"<string>\",\n            \"docker\": {\n              \"image\": \"<string>\"\n            },\n            \"version\": \"<string>\",\n            \"language\": \"<string>\",\n            \"maxCount\": 0,\n            \"createdAt\": \"<string>\",\n            \"functions\": [\n              {\n                \"slug\": \"<string>\",\n                \"function\": \"<string>\"\n              },\n              {\n                \"slug\": \"<string>\",\n                \"function\": \"<string>\"\n              }\n            ],\n            \"hasSource\": true,\n            \"namespace\": \"<string>\",\n            \"timestamp\": 0,\n            \"runnerType\": \"<string>\",\n            \"buildLogSaved\": true,\n            \"buildDurationMs\": 0\n          },\n          \"status\": \"<string>\",\n          \"taskId\": \"<string>\",\n          \"options\": {},\n          \"createdAt\": \"<string>\",\n          \"containerId\": \"<string>\",\n          \"functionSlug\": \"<string>\",\n          \"lastUpdatedAt\": \"<string>\",\n          \"taskMemoryInMB\": 0,\n          \"cloudWatchUrl\": \"<string>\"\n        }\n      ],\n      \"supersededTasks\": \"<array>\",\n      \"status\": \"<string>\",\n      \"events\": [\n        {\n          \"at\": \"<string>\",\n          \"status\": \"<string>\"\n        },\n        {\n          \"at\": \"<string>\",\n          \"status\": \"<string>\"\n        }\n      ],\n      \"createdAt\": \"<string>\",\n      \"lastUpdatedAt\": \"<string>\",\n      \"restarted\": true,\n      \"masterScriptLogs\": \"<array>\",\n      \"retryBehavior\": {},\n      \"output\": {\n        \"type\": \"<string>\",\n        \"result\": [\n          {\n            \"type\": \"<string>\",\n            \"bucket\": \"<string>\",\n            \"fileId\": \"<string>\",\n            \"fileKey\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"bucket\": \"<string>\",\n            \"fileId\": \"<string>\",\n            \"fileKey\": \"<string>\",\n            \"version\": \"<string>\"\n          }\n        ]\n      }\n    }\n  ]\n}"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/workflow/search?size=<string>&from=<string>&filter=<string>&pipelineId=<string>&startTime=<dateTime>&endTime=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"workflow",
												"search"
											],
											"query": [
												{
													"key": "size",
													"value": "<string>"
												},
												{
													"key": "from",
													"value": "<string>"
												},
												{
													"key": "filter",
													"value": "<string>"
												},
												{
													"key": "pipelineId",
													"value": "<string>"
												},
												{
													"key": "startTime",
													"value": "<dateTime>"
												},
												{
													"key": "endTime",
													"value": "<dateTime>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"validation\": {\n    \"source\": \"<string>\",\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								}
							]
						},
						{
							"name": "Status By Pipeline",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/workflow/statusByPipeline",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"workflow",
										"statusByPipeline"
									]
								},
								"description": "Status of pipelines"
							},
							"response": []
						},
						{
							"name": "Get Single Workflow Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/workflow/:workflowId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"workflow",
										":workflowId"
									],
									"variable": [
										{
											"key": "workflowId",
											"value": "<string>",
											"description": "(Required) Required. UUID of the workflow."
										}
									]
								},
								"description": "Search data pipeline workflows"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/workflow/:workflowId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"workflow",
												":workflowId"
											],
											"variable": [
												{
													"key": "workflowId",
													"value": "<string>",
													"description": "(Required) Required. UUID of the workflow."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"orgSlug\": \"<string>\",\n  \"pipelineId\": \"<string>\",\n  \"masterScriptNamespace\": \"<string>\",\n  \"masterScriptSlug\": \"<string>\",\n  \"masterScriptVersion\": \"<string>\",\n  \"protocolSlug\": \"<string>\",\n  \"protocolVersion\": \"<string>\",\n  \"protocol\": {\n    \"protocolSchema\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"steps\": [\n      {\n        \"slug\": \"<string>\",\n        \"description\": \"<string>\",\n        \"type\": \"<string>\",\n        \"script\": {\n          \"namespace\": \"<string>\",\n          \"slug\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"functionSlug\": \"<string>\"\n      },\n      {\n        \"slug\": \"<string>\",\n        \"description\": \"<string>\",\n        \"type\": \"<string>\",\n        \"script\": {\n          \"namespace\": \"<string>\",\n          \"slug\": \"<string>\",\n          \"version\": \"<string>\"\n        },\n        \"functionSlug\": \"<string>\"\n      }\n    ],\n    \"config\": \"<array>\"\n  },\n  \"pipelineConfig\": {\n    \"notificationsConfig\": {\n      \"sendOnSuccessful\": true,\n      \"sendOnFailed\": true,\n      \"notificationEmailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    \"pipelineName\": \"<string>\"\n  },\n  \"inputFile\": {\n    \"meta\": {\n      \"fileId\": \"<string>\",\n      \"source\": {\n        \"box\": {\n          \"id\": \"<string>\",\n          \"size\": 0,\n          \"filePath\": \"<string>\",\n          \"integrationSource\": \"<string>\"\n        },\n        \"type\": \"<string>\"\n      },\n      \"traceId\": \"<string>\",\n      \"sourceId\": \"<string>\",\n      \"sourceName\": \"<string>\",\n      \"sourceType\": \"<string>\",\n      \"integrationId\": \"<string>\",\n      \"integrationType\": \"<string>\"\n    },\n    \"type\": \"<string>\",\n    \"bucket\": \"<string>\",\n    \"fileId\": \"<string>\",\n    \"fileKey\": \"<string>\",\n    \"version\": \"<string>\",\n    \"customTags\": \"<array>\",\n    \"customMetadata\": {}\n  },\n  \"tasks\": [\n    {\n      \"slug\": \"<string>\",\n      \"input\": {\n        \"input_file\": {\n          \"meta\": {\n            \"fileId\": \"<string>\",\n            \"source\": {\n              \"box\": {\n                \"id\": \"<string>\",\n                \"size\": 0,\n                \"filePath\": \"<string>\",\n                \"integrationSource\": \"<string>\"\n              },\n              \"type\": \"<string>\"\n            },\n            \"traceId\": \"<string>\",\n            \"sourceId\": \"<string>\",\n            \"sourceName\": \"<string>\",\n            \"sourceType\": \"<string>\",\n            \"integrationId\": \"<string>\",\n            \"integrationType\": \"<string>\"\n          },\n          \"type\": \"<string>\",\n          \"bucket\": \"<string>\",\n          \"fileId\": \"<string>\",\n          \"fileKey\": \"<string>\",\n          \"version\": \"<string>\",\n          \"customTags\": \"<array>\",\n          \"customMetadata\": {}\n        }\n      },\n      \"retry\": 0,\n      \"events\": [\n        {\n          \"at\": \"<string>\",\n          \"status\": \"<string>\"\n        },\n        {\n          \"at\": \"<string>\",\n          \"status\": \"<string>\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"<string>\",\n        \"result\": [\n          {\n            \"type\": \"<string>\",\n            \"bucket\": \"<string>\",\n            \"fileId\": \"<string>\",\n            \"fileKey\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"bucket\": \"<string>\",\n            \"fileId\": \"<string>\",\n            \"fileKey\": \"<string>\",\n            \"version\": \"<string>\"\n          }\n        ]\n      },\n      \"script\": {\n        \"list\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"slug\": \"<string>\",\n        \"docker\": {\n          \"image\": \"<string>\"\n        },\n        \"version\": \"<string>\",\n        \"language\": \"<string>\",\n        \"maxCount\": 0,\n        \"createdAt\": \"<string>\",\n        \"functions\": [\n          {\n            \"slug\": \"<string>\",\n            \"function\": \"<string>\"\n          },\n          {\n            \"slug\": \"<string>\",\n            \"function\": \"<string>\"\n          }\n        ],\n        \"hasSource\": true,\n        \"namespace\": \"<string>\",\n        \"timestamp\": 0,\n        \"runnerType\": \"<string>\",\n        \"buildLogSaved\": true,\n        \"buildDurationMs\": 0\n      },\n      \"status\": \"<string>\",\n      \"taskId\": \"<string>\",\n      \"options\": {},\n      \"createdAt\": \"<string>\",\n      \"containerId\": \"<string>\",\n      \"functionSlug\": \"<string>\",\n      \"lastUpdatedAt\": \"<string>\",\n      \"taskMemoryInMB\": 0,\n      \"cloudWatchUrl\": \"<string>\"\n    },\n    {\n      \"slug\": \"<string>\",\n      \"input\": {\n        \"input_file\": {\n          \"meta\": {\n            \"fileId\": \"<string>\",\n            \"source\": {\n              \"box\": {\n                \"id\": \"<string>\",\n                \"size\": 0,\n                \"filePath\": \"<string>\",\n                \"integrationSource\": \"<string>\"\n              },\n              \"type\": \"<string>\"\n            },\n            \"traceId\": \"<string>\",\n            \"sourceId\": \"<string>\",\n            \"sourceName\": \"<string>\",\n            \"sourceType\": \"<string>\",\n            \"integrationId\": \"<string>\",\n            \"integrationType\": \"<string>\"\n          },\n          \"type\": \"<string>\",\n          \"bucket\": \"<string>\",\n          \"fileId\": \"<string>\",\n          \"fileKey\": \"<string>\",\n          \"version\": \"<string>\",\n          \"customTags\": \"<array>\",\n          \"customMetadata\": {}\n        }\n      },\n      \"retry\": 0,\n      \"events\": [\n        {\n          \"at\": \"<string>\",\n          \"status\": \"<string>\"\n        },\n        {\n          \"at\": \"<string>\",\n          \"status\": \"<string>\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"<string>\",\n        \"result\": [\n          {\n            \"type\": \"<string>\",\n            \"bucket\": \"<string>\",\n            \"fileId\": \"<string>\",\n            \"fileKey\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"bucket\": \"<string>\",\n            \"fileId\": \"<string>\",\n            \"fileKey\": \"<string>\",\n            \"version\": \"<string>\"\n          }\n        ]\n      },\n      \"script\": {\n        \"list\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"slug\": \"<string>\",\n        \"docker\": {\n          \"image\": \"<string>\"\n        },\n        \"version\": \"<string>\",\n        \"language\": \"<string>\",\n        \"maxCount\": 0,\n        \"createdAt\": \"<string>\",\n        \"functions\": [\n          {\n            \"slug\": \"<string>\",\n            \"function\": \"<string>\"\n          },\n          {\n            \"slug\": \"<string>\",\n            \"function\": \"<string>\"\n          }\n        ],\n        \"hasSource\": true,\n        \"namespace\": \"<string>\",\n        \"timestamp\": 0,\n        \"runnerType\": \"<string>\",\n        \"buildLogSaved\": true,\n        \"buildDurationMs\": 0\n      },\n      \"status\": \"<string>\",\n      \"taskId\": \"<string>\",\n      \"options\": {},\n      \"createdAt\": \"<string>\",\n      \"containerId\": \"<string>\",\n      \"functionSlug\": \"<string>\",\n      \"lastUpdatedAt\": \"<string>\",\n      \"taskMemoryInMB\": 0,\n      \"cloudWatchUrl\": \"<string>\"\n    }\n  ],\n  \"supersededTasks\": \"<array>\",\n  \"status\": \"<string>\",\n  \"events\": [\n    {\n      \"at\": \"<string>\",\n      \"status\": \"<string>\"\n    },\n    {\n      \"at\": \"<string>\",\n      \"status\": \"<string>\"\n    }\n  ],\n  \"createdAt\": \"<string>\",\n  \"lastUpdatedAt\": \"<string>\",\n  \"restarted\": true,\n  \"masterScriptLogs\": \"<array>\",\n  \"retryBehavior\": {},\n  \"output\": {\n    \"type\": \"<string>\",\n    \"result\": [\n      {\n        \"type\": \"<string>\",\n        \"bucket\": \"<string>\",\n        \"fileId\": \"<string>\",\n        \"fileKey\": \"<string>\",\n        \"version\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"bucket\": \"<string>\",\n        \"fileId\": \"<string>\",\n        \"fileKey\": \"<string>\",\n        \"version\": \"<string>\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/workflow/:workflowId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"workflow",
												":workflowId"
											],
											"variable": [
												{
													"key": "workflowId",
													"value": "<string>",
													"description": "(Required) Required. UUID of the workflow."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Search workflows draft",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/workflow/workflows-draft?page=1&limit=1000&filter=all&pipelineId=<string>&startTime=<dateTime>&endTime=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"workflow",
										"workflows-draft"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Results page number - the start index of results is calculated as (page - 1) * limit. Page parameter will return results in range [start index, start index + limit]. Default value is 1. Value 0 will cause error."
										},
										{
											"key": "limit",
											"value": "1000",
											"description": "Page size - number of the workflow results to retrieve for a given page."
										},
										{
											"key": "filter",
											"value": "all",
											"description": "Filter by the workflow completion status. Possible values are: `all` - for all the workflows (completed and failed), `failed` - for the workflows that failed and `completed` - for the workflows that completed successfully."
										},
										{
											"key": "pipelineId",
											"value": "<string>",
											"description": "Optional parameter. If provided, only the workflows associated with this pipelineid are retrieved. Otherwise, the workflows from all the pipelines are retrieved."
										},
										{
											"key": "startTime",
											"value": "<dateTime>",
											"description": "Optional parameter. If provided, service returns all the workflows created after this time. Value can be Unix time in milliseconds or date in ISO format with or without hours, minutes, seconds. If value is just a date without hours, minutes and second, timestamp will be defaulted to 00:00:00 for given date."
										},
										{
											"key": "endTime",
											"value": "<dateTime>",
											"description": "Optional parameter. If provided, service returns all the workflows created before this time. Value can be Unix time in milliseconds or date in ISO format with or without hours, minutes, seconds. If value is just a date without hours, minutes and second, timestamp will be defaulted to 00:00:00 for given date."
										}
									]
								},
								"description": "Search data pipeline workflows"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/workflow/workflows-draft?page=1&limit=1000&filter=all&pipelineId=<string>&startTime=<dateTime>&endTime=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"workflow",
												"workflows-draft"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "1000"
												},
												{
													"key": "filter",
													"value": "all"
												},
												{
													"key": "pipelineId",
													"value": "<string>"
												},
												{
													"key": "startTime",
													"value": "<dateTime>"
												},
												{
													"key": "endTime",
													"value": "<dateTime>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<string>\",\n    \"protocolSlug\": \"<string>\",\n    \"pipelineId\": \"<string>\",\n    \"protocolVersion\": \"<string>\",\n    \"orgSlug\": \"<string>\",\n    \"protocol\": {\n      \"name\": \"<string>\",\n      \"steps\": [\n        {\n          \"slug\": \"<string>\",\n          \"description\": \"<string>\",\n          \"type\": \"<string>\",\n          \"pattern\": \"<string>\",\n          \"script\": {\n            \"slug\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"inputMapping\": [\n            {\n              \"key\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"outputMapping\": [\n            {\n              \"key\": \"<string>\",\n              \"shouldUpload\": true,\n              \"value\": \"<string>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"shouldUpload\": true,\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"slug\": \"<string>\",\n          \"description\": \"<string>\",\n          \"type\": \"<string>\",\n          \"pattern\": \"<string>\",\n          \"script\": {\n            \"slug\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"inputMapping\": [\n            {\n              \"key\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"outputMapping\": [\n            {\n              \"key\": \"<string>\",\n              \"shouldUpload\": true,\n              \"value\": \"<string>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"shouldUpload\": true,\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    \"inputFile\": {\n      \"meta\": {\n        \"fileId\": \"<string>\",\n        \"sourceType\": \"<string>\",\n        \"source\": {\n          \"type\": \"<string>\",\n          \"egnyte\": {\n            \"url\": \"<string>\",\n            \"integrationId\": \"<string>\",\n            \"filePath\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"groupId\": \"<string>\",\n            \"entryId\": \"<string>\",\n            \"checksum\": \"<string>\",\n            \"versionId\": \"<string>\",\n            \"lastModifiedTime\": \"<string>\",\n            \"versionNum\": 0\n          }\n        }\n      },\n      \"fileKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"type\": \"<string>\",\n      \"checksum\": \"<string>\"\n    },\n    \"tasks\": [\n      {\n        \"logs\": [\n          {\n            \"type\": \"<string>\",\n            \"content\": \"<string>\",\n            \"sessionId\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"content\": \"<string>\",\n            \"sessionId\": \"<string>\"\n          }\n        ],\n        \"slug\": \"<string>\",\n        \"errors\": [\n          {\n            \"error\": {\n              \"error\": {\n                \"message\": \"<string>\"\n              },\n              \"message\": \"<string>\"\n            },\n            \"action\": \"<string>\",\n            \"exitCode\": 0,\n            \"sessionId\": \"<string>\",\n            \"humanReadableMsg\": \"<string>\"\n          },\n          {\n            \"error\": {\n              \"error\": {\n                \"message\": \"<string>\"\n              },\n              \"message\": \"<string>\"\n            },\n            \"action\": \"<string>\",\n            \"exitCode\": 0,\n            \"sessionId\": \"<string>\",\n            \"humanReadableMsg\": \"<string>\"\n          }\n        ],\n        \"status\": \"<string>\",\n        \"taskId\": \"<string>\",\n        \"createdAt\": 0,\n        \"lastUpdatedAt\": 0\n      },\n      {\n        \"logs\": [\n          {\n            \"type\": \"<string>\",\n            \"content\": \"<string>\",\n            \"sessionId\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"content\": \"<string>\",\n            \"sessionId\": \"<string>\"\n          }\n        ],\n        \"slug\": \"<string>\",\n        \"errors\": [\n          {\n            \"error\": {\n              \"error\": {\n                \"message\": \"<string>\"\n              },\n              \"message\": \"<string>\"\n            },\n            \"action\": \"<string>\",\n            \"exitCode\": 0,\n            \"sessionId\": \"<string>\",\n            \"humanReadableMsg\": \"<string>\"\n          },\n          {\n            \"error\": {\n              \"error\": {\n                \"message\": \"<string>\"\n              },\n              \"message\": \"<string>\"\n            },\n            \"action\": \"<string>\",\n            \"exitCode\": 0,\n            \"sessionId\": \"<string>\",\n            \"humanReadableMsg\": \"<string>\"\n          }\n        ],\n        \"status\": \"<string>\",\n        \"taskId\": \"<string>\",\n        \"createdAt\": 0,\n        \"lastUpdatedAt\": 0\n      }\n    ],\n    \"status\": \"<string>\",\n    \"createdAt\": 0,\n    \"lastUpdatedAt\": 0,\n    \"pipelineConfig\": {}\n  },\n  {\n    \"id\": \"<string>\",\n    \"protocolSlug\": \"<string>\",\n    \"pipelineId\": \"<string>\",\n    \"protocolVersion\": \"<string>\",\n    \"orgSlug\": \"<string>\",\n    \"protocol\": {\n      \"name\": \"<string>\",\n      \"steps\": [\n        {\n          \"slug\": \"<string>\",\n          \"description\": \"<string>\",\n          \"type\": \"<string>\",\n          \"pattern\": \"<string>\",\n          \"script\": {\n            \"slug\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"inputMapping\": [\n            {\n              \"key\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"outputMapping\": [\n            {\n              \"key\": \"<string>\",\n              \"shouldUpload\": true,\n              \"value\": \"<string>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"shouldUpload\": true,\n              \"value\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"slug\": \"<string>\",\n          \"description\": \"<string>\",\n          \"type\": \"<string>\",\n          \"pattern\": \"<string>\",\n          \"script\": {\n            \"slug\": \"<string>\",\n            \"version\": \"<string>\"\n          },\n          \"inputMapping\": [\n            {\n              \"key\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"outputMapping\": [\n            {\n              \"key\": \"<string>\",\n              \"shouldUpload\": true,\n              \"value\": \"<string>\"\n            },\n            {\n              \"key\": \"<string>\",\n              \"shouldUpload\": true,\n              \"value\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    \"inputFile\": {\n      \"meta\": {\n        \"fileId\": \"<string>\",\n        \"sourceType\": \"<string>\",\n        \"source\": {\n          \"type\": \"<string>\",\n          \"egnyte\": {\n            \"url\": \"<string>\",\n            \"integrationId\": \"<string>\",\n            \"filePath\": \"<string>\",\n            \"fileName\": \"<string>\",\n            \"groupId\": \"<string>\",\n            \"entryId\": \"<string>\",\n            \"checksum\": \"<string>\",\n            \"versionId\": \"<string>\",\n            \"lastModifiedTime\": \"<string>\",\n            \"versionNum\": 0\n          }\n        }\n      },\n      \"fileKey\": \"<string>\",\n      \"bucket\": \"<string>\",\n      \"type\": \"<string>\",\n      \"checksum\": \"<string>\"\n    },\n    \"tasks\": [\n      {\n        \"logs\": [\n          {\n            \"type\": \"<string>\",\n            \"content\": \"<string>\",\n            \"sessionId\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"content\": \"<string>\",\n            \"sessionId\": \"<string>\"\n          }\n        ],\n        \"slug\": \"<string>\",\n        \"errors\": [\n          {\n            \"error\": {\n              \"error\": {\n                \"message\": \"<string>\"\n              },\n              \"message\": \"<string>\"\n            },\n            \"action\": \"<string>\",\n            \"exitCode\": 0,\n            \"sessionId\": \"<string>\",\n            \"humanReadableMsg\": \"<string>\"\n          },\n          {\n            \"error\": {\n              \"error\": {\n                \"message\": \"<string>\"\n              },\n              \"message\": \"<string>\"\n            },\n            \"action\": \"<string>\",\n            \"exitCode\": 0,\n            \"sessionId\": \"<string>\",\n            \"humanReadableMsg\": \"<string>\"\n          }\n        ],\n        \"status\": \"<string>\",\n        \"taskId\": \"<string>\",\n        \"createdAt\": 0,\n        \"lastUpdatedAt\": 0\n      },\n      {\n        \"logs\": [\n          {\n            \"type\": \"<string>\",\n            \"content\": \"<string>\",\n            \"sessionId\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"content\": \"<string>\",\n            \"sessionId\": \"<string>\"\n          }\n        ],\n        \"slug\": \"<string>\",\n        \"errors\": [\n          {\n            \"error\": {\n              \"error\": {\n                \"message\": \"<string>\"\n              },\n              \"message\": \"<string>\"\n            },\n            \"action\": \"<string>\",\n            \"exitCode\": 0,\n            \"sessionId\": \"<string>\",\n            \"humanReadableMsg\": \"<string>\"\n          },\n          {\n            \"error\": {\n              \"error\": {\n                \"message\": \"<string>\"\n              },\n              \"message\": \"<string>\"\n            },\n            \"action\": \"<string>\",\n            \"exitCode\": 0,\n            \"sessionId\": \"<string>\",\n            \"humanReadableMsg\": \"<string>\"\n          }\n        ],\n        \"status\": \"<string>\",\n        \"taskId\": \"<string>\",\n        \"createdAt\": 0,\n        \"lastUpdatedAt\": 0\n      }\n    ],\n    \"status\": \"<string>\",\n    \"createdAt\": 0,\n    \"lastUpdatedAt\": 0,\n    \"pipelineConfig\": {}\n  }\n]"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/workflow/workflows-draft?page=1&limit=1000&filter=all&pipelineId=<string>&startTime=<dateTime>&endTime=<dateTime>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"workflow",
												"workflows-draft"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "1000"
												},
												{
													"key": "filter",
													"value": "all"
												},
												{
													"key": "pipelineId",
													"value": "<string>"
												},
												{
													"key": "startTime",
													"value": "<dateTime>"
												},
												{
													"key": "endTime",
													"value": "<dateTime>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Agents External v1",
			"item": [
				{
					"name": "data-acquisition/agent",
					"item": [
						{
							"name": "status",
							"item": [
								{
									"name": "Agent Status (Heart Beat)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"status"
											]
										},
										"description": "This endpoint allows TetraScience Agent to send heartbeats to the Tetrascience platform periodically. Platform will return the agent's name. It's recommended to send a heartbeat every 30 seconds.\n\nIt requires a user-defined agent set up in the TetraScience Web UI.\n\nRequired fields:\n- agentId\n- agentVersion\n\nOptional fields:\n- agent\n- sourceType - If agent defines various source types, like file-log agent, this should be an array of objects with `filePath` and `type` values. Otherwise, it should be single item array that contains object with field `type`"
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/data-acquisition/agent/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"data-acquisition",
														"agent",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"agentName\": \"<string>\"\n}"
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/data-acquisition/agent/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"data-acquisition",
														"agent",
														"status"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Agent Status Setting Update",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"status"
											]
										},
										"description": "This endpoint allows TetraScience Agent to send status setting update to platform. Tetrascience agents have start/stop button. When start button is clicked, agent should hit endpoint with `statusSetting=STARTED`. Opposite, when stop button is clicked, agent should hit endpoint with `statusSetting=STOPPED`.\n\n It requires a user-defined agent set up in the TetraScience Web UI"
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/data-acquisition/agent/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"data-acquisition",
														"agent",
														"status"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"agentName\": \"<string>\"\n}"
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/data-acquisition/agent/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"data-acquisition",
														"agent",
														"status"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "File Upload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentId\": \"<string>\",\n  \"file\": \"<string>\",\n  \"agent\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"sourceType\": \"unknown\",\n  \"fileCategory\": \"RAW\",\n  \"fileId\": \"<string>\",\n  \"traceId\": \"same as fileId\",\n  \"filePath\": \"<string>\",\n  \"payloadGzip\": \"false\",\n  \"metadata\": \"<string>\",\n  \"tags\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/data-acquisition/agent/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"data-acquisition",
										"agent",
										"upload"
									]
								},
								"description": "This endpoint uploads a file to TetraScience Cloud.  It requires a user-defined agent set up in the TetraScience Web UI.  API users can use it to upload, manage their files, and trigger pipelines.\n\nMaximum payload size: 500MB\n\nValidations performed by this endpoint:\n\n1. `agentId` must be a valid ID of the user defined agent (UDA)\n2. param `sourceType` must contain only lower case alphanumerical characters and dashes\n3. params `metadata` and `tags` must contain only ASCII characters; `tags` values cannot contain comma and values must be unique\n4. params `metadata` and `tags` together as JSON objects must have less than 1.5KB of text (1536 characters)"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"<string>\",\n  \"file\": \"<string>\",\n  \"agent\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"sourceType\": \"unknown\",\n  \"fileCategory\": \"RAW\",\n  \"fileId\": \"<string>\",\n  \"traceId\": \"same as fileId\",\n  \"filePath\": \"<string>\",\n  \"payloadGzip\": \"false\",\n  \"metadata\": \"<string>\",\n  \"tags\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"upload"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"fileKey\": \"<string>\",\n  \"bucket\": \"<string>\",\n  \"version\": \"<string>\",\n  \"fileId\": \"<string>\"\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"<string>\",\n  \"file\": \"<string>\",\n  \"agent\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"sourceType\": \"unknown\",\n  \"fileCategory\": \"RAW\",\n  \"fileId\": \"<string>\",\n  \"traceId\": \"same as fileId\",\n  \"filePath\": \"<string>\",\n  \"payloadGzip\": \"false\",\n  \"metadata\": \"<string>\",\n  \"tags\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"upload"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "422",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"<string>\",\n  \"file\": \"<string>\",\n  \"agent\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"sourceType\": \"unknown\",\n  \"fileCategory\": \"RAW\",\n  \"fileId\": \"<string>\",\n  \"traceId\": \"same as fileId\",\n  \"filePath\": \"<string>\",\n  \"payloadGzip\": \"false\",\n  \"metadata\": \"<string>\",\n  \"tags\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"upload"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Agent Log Upload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentId\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"log\": \"<binary>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/data-acquisition/agent/log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"data-acquisition",
										"agent",
										"log"
									]
								},
								"description": "This endpoint uploads agents log to TetraScience Cloud. It requires a user-defined agent set up in the TetraScience Web UI."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"log\": \"<binary>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/log",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"log"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"log\": \"<binary>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/log",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"log"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Agent System Metric Upload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentId\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"systemmetric\": \"<binary>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/data-acquisition/agent/systemmetric",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"data-acquisition",
										"agent",
										"systemmetric"
									]
								},
								"description": "TetraScience Agent can periodically upload system metrics of itself and the host environment the Agent is running. It requires a user-defined agent set up in the TetraScience Web UI. Uploaded system metric file should be new line delimited JSON file. See below for more details."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"systemmetric\": \"<binary>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/systemmetric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"systemmetric"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"systemmetric\": \"<binary>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/systemmetric",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"systemmetric"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Agent Configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) JWT Token.",
										"key": "ts-auth-token",
										"value": "<string>"
									},
									{
										"description": "(Required) Your organization's slug.",
										"key": "x-org-slug",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/data-acquisition/agent/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"data-acquisition",
										"agent",
										"config"
									]
								},
								"description": "This endpoint returns all the parameters that client needs in order to upload files directly to S3 and upload log directly to Cloudwatch. Using these values and temporary credentials obtained from `/v1/data-acquisition/agent/credentials` client can upload files to S3 into their bucket and log to CloudWatch into their log groups."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token.",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization's slug.",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"orgSlug\": \"<string>\",\n  \"integrationId\": \"<string>\",\n  \"agentId\": \"<string>\",\n  \"agentName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"bucket\": \"<string>\",\n  \"streamBucket\": \"<string>\",\n  \"backupBucket\": \"<string>\",\n  \"kmsKey\": \"<string>\",\n  \"integrationType\": \"<string>\",\n  \"metadata\": {},\n  \"tags\": \"<array>\",\n  \"logGroupName\": \"<string>\",\n  \"rpcSourceQueueUrl\": \"<string>\",\n  \"rpcPlatformQueueUrl\": \"<string>\"\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token.",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization's slug.",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"config"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "User Defined Agent Agent Temp AWS Credentials",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/data-acquisition/agent/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"data-acquisition",
										"agent",
										"credentials"
									]
								},
								"description": "This endpoint returns temporary credentials for given organization based on datahub policy. When using those credentials, client can upload files to their S3 bucket and write log to their CloudWatch. Returned credentials have expiration time 60 minutes."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"credentials"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"AccessKeyId\": \"<string>\",\n  \"SecretAccessKey\": \"<string>\",\n  \"SessionToken\": \"<string>\",\n  \"Expiration\": \"<string>\"\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"credentials"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "User Defined Integration File Upload-Draft",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentId\": \"<string>\",\n  \"file\": \"<string>\",\n  \"filePath\": \"<string>\",\n  \"agent\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"sourceType\": \"unknown\",\n  \"fileCategory\": \"RAW\",\n  \"fileId\": \"<string>\",\n  \"traceId\": \"same as fileId\",\n  \"payloadGzip\": \"false\",\n  \"metadata\": \"<string>\",\n  \"tags\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/data-acquisition/agent/upload-draft",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"data-acquisition",
										"agent",
										"upload-draft"
									]
								},
								"description": "This endpoint uploads a file to TetraScience Cloud.  It requires a user-defined integration and user-defined agent set up in the TetraScience Web UI.  API users can use it to upload, manage their files and trigger pipelines.\n\nMaximum payload size: 500MB\n\nValidations performed by this endpoint:\n\n1. `agentId` must be a valid ID of the user defined agent (UDA)\n2. param `filePath` must be provided\n3. param `sourceType` must contain only lower case alphanumerical characters and dashes\n4. params `metadata` and `tags` must contain only ASCII characters; `tags` values cannot contain comma and values must be unique\n5. params `metadata` and `tags` together as JSON objects must have less than 1.5KB of text (1536 characters)"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"<string>\",\n  \"file\": \"<string>\",\n  \"filePath\": \"<string>\",\n  \"agent\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"sourceType\": \"unknown\",\n  \"fileCategory\": \"RAW\",\n  \"fileId\": \"<string>\",\n  \"traceId\": \"same as fileId\",\n  \"payloadGzip\": \"false\",\n  \"metadata\": \"<string>\",\n  \"tags\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/upload-draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"upload-draft"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"fileKey\": \"<string>\",\n  \"bucket\": \"<string>\",\n  \"version\": \"<string>\",\n  \"fileId\": \"<string>\"\n}"
								},
								{
									"name": "422",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"<string>\",\n  \"file\": \"<string>\",\n  \"filePath\": \"<string>\",\n  \"agent\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"sourceType\": \"unknown\",\n  \"fileCategory\": \"RAW\",\n  \"fileId\": \"<string>\",\n  \"traceId\": \"same as fileId\",\n  \"payloadGzip\": \"false\",\n  \"metadata\": \"<string>\",\n  \"tags\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/data-acquisition/agent/upload-draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"data-acquisition",
												"agent",
												"upload-draft"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "commands",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get one command",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/commands/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Command ID"
												}
											]
										},
										"description": "Use this endpoint to obtain all the details for one single command. You will need to supply the command id as the path variable.  This endpoint returns details like the command id, creation time, expiration time, the action, actual request body, and more."
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/commands/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"commands",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Command ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"orgSlug\": \"<string>\",\n  \"targetId\": \"<string>\",\n  \"action\": \"<string>\",\n  \"expiresAt\": \"<string>\",\n  \"metadata\": {\n    \"key1\": \"<string>\",\n    \"key2\": \"<string>\"\n  },\n  \"status\": \"<string>\",\n  \"requestBody\": {\n    \"body\": {\n      \"url\": \"<string>\",\n      \"body\": {\n        \"raw\": \"<string>\",\n        \"mode\": \"<string>\"\n      },\n      \"method\": \"<string>\",\n      \"headers\": \"<array>\",\n      \"ignore_tls_certificate\": true\n    },\n    \"action\": \"<string>\",\n    \"targetId\": \"<string>\",\n    \"commandId\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"expiresAt\": \"<string>\"\n  },\n  \"responseBody\": {\n    \"body\": \"<string>\"\n  },\n  \"createdByEntity\": {},\n  \"createdBy\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n}"
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/commands/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"commands",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Command ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "500",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/commands/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"commands",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Command ID"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get command history",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/commands/:id/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands",
												":id",
												"history"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"description": "(Required) Command id"
												}
											]
										},
										"description": "Use this endpoint to obtain all the changes of a given command. It should return all status changes including who made the change and when the change was made."
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/commands/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"commands",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Command id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"history\": [\n    {\n      \"id\": \"<string>\",\n      \"commandId\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedAt\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"commandId\": \"<string>\",\n      \"reason\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"updatedAt\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/commands/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"commands",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Command id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "500",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/commands/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"commands",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) Command id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Purge queue",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/commands?targetId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"commands"
									],
									"query": [
										{
											"key": "targetId",
											"value": "<string>",
											"description": "(Required) Agent or connector ID for which queue should be purged"
										}
									]
								},
								"description": "Use this method to purge all existing commands from the target queue. This command can be useful when testing new pipelines and command creation and the queue is blocked by a large number of unexecuted commands. When you fire this endpoint, all commands are deleted from the queue, and the command status is changed to PURGED.  Also, during the purge, the queue for the given target is blocked and does not receive new commands."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/commands?targetId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands"
											],
											"query": [
												{
													"key": "targetId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"purged\": [\n    {\n      \"commandId\": \"<string>\"\n    },\n    {\n      \"commandId\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/commands?targetId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands"
											],
											"query": [
												{
													"key": "targetId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "500",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/commands?targetId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands"
											],
											"query": [
												{
													"key": "targetId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Search commands",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/commands?targetId=<string>&action=<string>&status=<string>&fromDate=<string>&toDate=<string>&from=<integer>&size=<integer>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"commands"
									],
									"query": [
										{
											"key": "targetId",
											"value": "<string>",
											"description": "ID of the target that received and processed command(s)"
										},
										{
											"key": "action",
											"value": "<string>",
											"description": "Action label like TetraScience.Connector.sdc.CreateMeasurementOrder"
										},
										{
											"key": "status",
											"value": "<string>",
											"description": "Command status: CREATED, UNSENT, PENDING, EXPIRED, PURGED, ERROR, PROCESSING, REJECTED, SUCCESS, FAILURE"
										},
										{
											"key": "fromDate",
											"value": "<string>",
											"description": "Commands created from given timestamp (ISO timestamp)"
										},
										{
											"key": "toDate",
											"value": "<string>",
											"description": "Commands created till given date (ISO timestamp)"
										},
										{
											"key": "from",
											"value": "<integer>",
											"description": "Display commands started from specified number in the results array.  By default, commands are displayed from the start of the array (the number 0).  This parameter is included if the result set is large, pagination might be required.   This parameter is typically used in conjunction with size."
										},
										{
											"key": "size",
											"value": "<integer>",
											"description": "Indicates the number of results to return in the request.  This parameter is included if the result set is large, pagination might be required.   This parameter is typically used in conjunction with from."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Sort order: asc | desc"
										}
									]
								},
								"description": "Use this endpoint to search all on-premise commands based on various filters. This endpoint is useful when you want to filter out commands, get all successful, or unsuccessful commands, get all commands that are sent to some agent/connector, commands that are created within a certain time range and more."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/commands?targetId=<string>&action=<string>&status=<string>&fromDate=<string>&toDate=<string>&from=<integer>&size=<integer>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands"
											],
											"query": [
												{
													"key": "targetId",
													"value": "<string>"
												},
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "fromDate",
													"value": "<string>"
												},
												{
													"key": "toDate",
													"value": "<string>"
												},
												{
													"key": "from",
													"value": "<integer>"
												},
												{
													"key": "size",
													"value": "<integer>"
												},
												{
													"key": "sort",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"hits\": [\n    {\n      \"id\": \"<string>\",\n      \"orgSlug\": \"<string>\",\n      \"targetId\": \"<string>\",\n      \"action\": \"<string>\",\n      \"expiresAt\": \"<string>\",\n      \"metadata\": {\n        \"key1\": \"<string>\",\n        \"key2\": \"<string>\"\n      },\n      \"status\": \"<string>\",\n      \"requestBody\": {\n        \"body\": {\n          \"url\": \"<string>\",\n          \"body\": {\n            \"raw\": \"<string>\",\n            \"mode\": \"<string>\"\n          },\n          \"method\": \"<string>\",\n          \"headers\": \"<array>\",\n          \"ignore_tls_certificate\": true\n        },\n        \"action\": \"<string>\",\n        \"targetId\": \"<string>\",\n        \"commandId\": \"<string>\",\n        \"createdAt\": \"<string>\",\n        \"expiresAt\": \"<string>\"\n      },\n      \"responseBody\": {\n        \"body\": \"<string>\",\n        \"headers\": [\n          {\n            \"date\": \"<string>\"\n          },\n          {\n            \"date\": \"<string>\"\n          }\n        ],\n        \"statusCode\": 0\n      },\n      \"createdByEntity\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"orgSlug\": \"<string>\",\n      \"targetId\": \"<string>\",\n      \"action\": \"<string>\",\n      \"expiresAt\": \"<string>\",\n      \"metadata\": {\n        \"key1\": \"<string>\",\n        \"key2\": \"<string>\"\n      },\n      \"status\": \"<string>\",\n      \"requestBody\": {\n        \"body\": {\n          \"url\": \"<string>\",\n          \"body\": {\n            \"raw\": \"<string>\",\n            \"mode\": \"<string>\"\n          },\n          \"method\": \"<string>\",\n          \"headers\": \"<array>\",\n          \"ignore_tls_certificate\": true\n        },\n        \"action\": \"<string>\",\n        \"targetId\": \"<string>\",\n        \"commandId\": \"<string>\",\n        \"createdAt\": \"<string>\",\n        \"expiresAt\": \"<string>\"\n      },\n      \"responseBody\": {\n        \"body\": \"<string>\",\n        \"headers\": [\n          {\n            \"date\": \"<string>\"\n          },\n          {\n            \"date\": \"<string>\"\n          }\n        ],\n        \"statusCode\": 0\n      },\n      \"createdByEntity\": \"<string>\",\n      \"createdBy\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"updatedAt\": \"<string>\"\n    }\n  ],\n  \"hasNext\": true,\n  \"from\": 0,\n  \"size\": 0,\n  \"sort\": \"<string>\"\n}"
								},
								{
									"name": "500",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/commands?targetId=<string>&action=<string>&status=<string>&fromDate=<string>&toDate=<string>&from=<integer>&size=<integer>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands"
											],
											"query": [
												{
													"key": "targetId",
													"value": "<string>"
												},
												{
													"key": "action",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "fromDate",
													"value": "<string>"
												},
												{
													"key": "toDate",
													"value": "<string>"
												},
												{
													"key": "from",
													"value": "<integer>"
												},
												{
													"key": "size",
													"value": "<integer>"
												},
												{
													"key": "sort",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Create command",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RAW_BODY\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/commands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"commands"
									]
								},
								"description": "Use this endpoint to create a new command for an on-premise connector/agent. It also automatically sends command to SQS queue for execution. Once it is in the queue, the connector/agent listening on the target queue picks up the command,  tries to execute it, and sends the response back to the command service."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/commands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<string>\",\n  \"orgSlug\": \"<string>\",\n  \"targetId\": \"<string>\",\n  \"action\": \"<string>\",\n  \"expiresAt\": \"<string>\",\n  \"metadata\": {},\n  \"status\": \"<string>\",\n  \"requestBody\": {\n    \"body\": {\n      \"url\": \"<string>\",\n      \"body\": {\n        \"raw\": \"<string>\",\n        \"mode\": \"<string>\"\n      },\n      \"method\": \"<string>\",\n      \"headers\": [\n        {\n          \"Authorization\": \"<string>\"\n        },\n        {\n          \"Authorization\": \"<string>\"\n        }\n      ],\n      \"ignore_tls_certificate\": true\n    },\n    \"action\": \"<string>\",\n    \"targetId\": \"<string>\",\n    \"commandId\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"expiresAt\": \"<string>\"\n  },\n  \"responseBody\": {},\n  \"createdByEntity\": \"<string>\",\n  \"createdBy\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n}"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/commands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "500",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/commands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"commands"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Remotely configure a running File-Log Agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"services_enabled\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"services_configuration\": {\n    \"fileWatcher\": {\n      \"use_path_configuration\": \"<boolean>\",\n      \"paths\": [\n        {\n          \"file_watch_mode\": \"<string>\",\n          \"source_type\": \"<string>\",\n          \"interval\": \"<integer>\",\n          \"start_date\": \"<date>\",\n          \"path\": \"<string>\",\n          \"patterns\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metadata\": \"<object>\",\n          \"tags\": \"<string>\",\n          \"labels\": [\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"archive\": {\n            \"path\": \"<string>\",\n            \"wait_time\": \"<integer>\",\n            \"wait_time_unit\": \"<string>\",\n            \"dry_run\": \"<boolean>\",\n            \"delete\": {\n              \"wait_time\": \"<integer>\",\n              \"wait_time_unit\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"file_watch_mode\": \"<string>\",\n          \"source_type\": \"<string>\",\n          \"interval\": \"<integer>\",\n          \"start_date\": \"<date>\",\n          \"path\": \"<string>\",\n          \"patterns\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metadata\": \"<object>\",\n          \"tags\": \"<string>\",\n          \"labels\": [\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"archive\": {\n            \"path\": \"<string>\",\n            \"wait_time\": \"<integer>\",\n            \"wait_time_unit\": \"<string>\",\n            \"dry_run\": \"<boolean>\",\n            \"delete\": {\n              \"wait_time\": \"<integer>\",\n              \"wait_time_unit\": \"<string>\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"destination_id\": \"<uuid>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/agents/:id/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"agents",
								":id",
								"configuration"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Agent ID"
								}
							]
						},
						"description": "This endpoint allows configuration of a running File-Log Agent with paths.  The File-Log Agent must\nbe version 4.1.0 or greater, and configured to Receive Commands.  Additionally, the Command Queue\nmust be enabled for this Agent on TDP.\n\nThis will remove any paths not included in the JSON. To preserve existing paths, you must include them each time you POST.\n\nIf the target's command queue doesn't exist or is not accessible, the API will return a 400 error code and doesn't create the command.\n\nFor more details, see https://developers.tetrascience.com/docs/configuring-the-file-log-agent-in-the-cloud."
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"services_enabled\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"services_configuration\": {\n    \"fileWatcher\": {\n      \"use_path_configuration\": \"<boolean>\",\n      \"paths\": [\n        {\n          \"file_watch_mode\": \"<string>\",\n          \"source_type\": \"<string>\",\n          \"interval\": \"<integer>\",\n          \"start_date\": \"<date>\",\n          \"path\": \"<string>\",\n          \"patterns\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metadata\": \"<object>\",\n          \"tags\": \"<string>\",\n          \"labels\": [\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"archive\": {\n            \"path\": \"<string>\",\n            \"wait_time\": \"<integer>\",\n            \"wait_time_unit\": \"<string>\",\n            \"dry_run\": \"<boolean>\",\n            \"delete\": {\n              \"wait_time\": \"<integer>\",\n              \"wait_time_unit\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"file_watch_mode\": \"<string>\",\n          \"source_type\": \"<string>\",\n          \"interval\": \"<integer>\",\n          \"start_date\": \"<date>\",\n          \"path\": \"<string>\",\n          \"patterns\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metadata\": \"<object>\",\n          \"tags\": \"<string>\",\n          \"labels\": [\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"archive\": {\n            \"path\": \"<string>\",\n            \"wait_time\": \"<integer>\",\n            \"wait_time_unit\": \"<string>\",\n            \"dry_run\": \"<boolean>\",\n            \"delete\": {\n              \"wait_time\": \"<integer>\",\n              \"wait_time_unit\": \"<string>\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"destination_id\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/agents/:id/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"agents",
										":id",
										"configuration"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Agent ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"commandId\": \"<string>\"\n}"
						},
						{
							"name": "400",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"services_enabled\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"services_configuration\": {\n    \"fileWatcher\": {\n      \"use_path_configuration\": \"<boolean>\",\n      \"paths\": [\n        {\n          \"file_watch_mode\": \"<string>\",\n          \"source_type\": \"<string>\",\n          \"interval\": \"<integer>\",\n          \"start_date\": \"<date>\",\n          \"path\": \"<string>\",\n          \"patterns\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metadata\": \"<object>\",\n          \"tags\": \"<string>\",\n          \"labels\": [\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"archive\": {\n            \"path\": \"<string>\",\n            \"wait_time\": \"<integer>\",\n            \"wait_time_unit\": \"<string>\",\n            \"dry_run\": \"<boolean>\",\n            \"delete\": {\n              \"wait_time\": \"<integer>\",\n              \"wait_time_unit\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"file_watch_mode\": \"<string>\",\n          \"source_type\": \"<string>\",\n          \"interval\": \"<integer>\",\n          \"start_date\": \"<date>\",\n          \"path\": \"<string>\",\n          \"patterns\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metadata\": \"<object>\",\n          \"tags\": \"<string>\",\n          \"labels\": [\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"archive\": {\n            \"path\": \"<string>\",\n            \"wait_time\": \"<integer>\",\n            \"wait_time_unit\": \"<string>\",\n            \"dry_run\": \"<boolean>\",\n            \"delete\": {\n              \"wait_time\": \"<integer>\",\n              \"wait_time_unit\": \"<string>\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"destination_id\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/agents/:id/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"agents",
										":id",
										"configuration"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Agent ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "404",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"services_enabled\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"services_configuration\": {\n    \"fileWatcher\": {\n      \"use_path_configuration\": \"<boolean>\",\n      \"paths\": [\n        {\n          \"file_watch_mode\": \"<string>\",\n          \"source_type\": \"<string>\",\n          \"interval\": \"<integer>\",\n          \"start_date\": \"<date>\",\n          \"path\": \"<string>\",\n          \"patterns\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metadata\": \"<object>\",\n          \"tags\": \"<string>\",\n          \"labels\": [\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"archive\": {\n            \"path\": \"<string>\",\n            \"wait_time\": \"<integer>\",\n            \"wait_time_unit\": \"<string>\",\n            \"dry_run\": \"<boolean>\",\n            \"delete\": {\n              \"wait_time\": \"<integer>\",\n              \"wait_time_unit\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"file_watch_mode\": \"<string>\",\n          \"source_type\": \"<string>\",\n          \"interval\": \"<integer>\",\n          \"start_date\": \"<date>\",\n          \"path\": \"<string>\",\n          \"patterns\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"metadata\": \"<object>\",\n          \"tags\": \"<string>\",\n          \"labels\": [\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"name\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"archive\": {\n            \"path\": \"<string>\",\n            \"wait_time\": \"<integer>\",\n            \"wait_time_unit\": \"<string>\",\n            \"dry_run\": \"<boolean>\",\n            \"delete\": {\n              \"wait_time\": \"<integer>\",\n              \"wait_time_unit\": \"<string>\"\n            }\n          }\n        }\n      ]\n    }\n  },\n  \"destination_id\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/agents/:id/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"agents",
										":id",
										"configuration"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Agent ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "DataLake FileInfo External v1",
			"item": [
				{
					"name": "datalake",
					"item": [
						{
							"name": "metadata-tags",
							"item": [
								{
									"name": "Retrieve metadata and tags of a file",
									"request": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) JWT Token.",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization's slug.",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/metadata-tags?fileId=<string>&bucket=<string>&fileKey=<string>&type=s3file&version=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"metadata-tags"
											],
											"query": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "UUIDv4 of the target file in datalake"
												},
												{
													"key": "bucket",
													"value": "<string>",
													"description": "S3 bucket of the target file in datalake"
												},
												{
													"key": "fileKey",
													"value": "<string>",
													"description": "S3 key of the target file in datalake"
												},
												{
													"key": "type",
													"value": "s3file"
												},
												{
													"key": "version",
													"value": "<string>",
													"description": "Version of the target file in datalake"
												}
											]
										},
										"description": "This endpoint returns metadata and tags of a target file in datalake. This endpoint require either `fileId` or `bucket`, `fileKey` and `version` to be provided in order to uniquely identify file.\n\nValidations performed by this endpoint:\n\n1. if parameter `fileId` is not provided, then `bucket, `fileKey` and `version` parameters must be provided\n2. if parameters `bucket`, `fileKey` and `version` are not provided, parameter `fileId` must be provided"
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags?fileId=<string>&bucket=<string>&fileKey=<string>&type=s3file&version=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													],
													"query": [
														{
															"key": "fileId",
															"value": "<string>"
														},
														{
															"key": "bucket",
															"value": "<string>"
														},
														{
															"key": "fileKey",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "s3file"
														},
														{
															"key": "version",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"metadata\": {\n    \"b\": \"<string>\",\n    \"c\": \"<string>\"\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags?fileId=<string>&bucket=<string>&fileKey=<string>&type=s3file&version=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													],
													"query": [
														{
															"key": "fileId",
															"value": "<string>"
														},
														{
															"key": "bucket",
															"value": "<string>"
														},
														{
															"key": "fileKey",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "s3file"
														},
														{
															"key": "version",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Add metadata and tags to a file",
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) JWT Token.",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization's slug.",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"metadata-tags"
											]
										},
										"description": "This endpoint appends metadata and tags to a target file in the datalake. This endpoint require either `fileId` or `bucket`, `fileKey` and `version` to be provided in order to uniquely identify file.\n\nTarget file query is determined by field `originalFile`. Target file is queried in two ways:\n1. by `fileId` (UUID of a file in datalake)\n2. by `bucket`, `fileKey` and `version`\n\nEndpoint finds target file by given file query and creates new version with updated metadata and tags. If payload doesn't contain neither `metadata` nor `tags`, endpoint will return existing file from datalake.\n\nParameters `metadata` and `tags` description:\n\n1. `metadata` is JSON object, e.g. { \"key1\": \"value\", \"key2\": \"2\" }\n2. `metadata` can have empty string values\n3. `metadata` entry field can be null and in that case it will remove custom metadata value on target file\n4. `tags` is JSON array, e.g.  [\"a\", \"b\"]\nHere is an example payload for this endpoint:\n{\n  \"originalFile\": {\n    \"fileKey\": \"tetrascience/47ab98d5-cccb-4a7d-86f4-0ff8f7c11bdf/RAW/WAT12/Test_0504/Test_SignOff/PQ Sample Set/1135/19970917300559.json\",\n    \"bucket\": \"ts-platform-dev-datalake\",\n    \"version\": \"dUzbISdeNgKXuSsv.lUT73qr7lYoby_u\",\n    \"type\": \"s3file\"\n  },\n  \"metadata\": {\n    \"a\": \"a\",\n    \"b\": \"\",\n    \"c\": \"Test\"\n  },\n  \"tags\": [\"Boston\", \"San Fran\", \"123\"]\n}\nIt will append any existing metadata/tags with the ones listed in the payload.\n\nValidations performed by this endpoint:\n\n1. if parameter `fileId` is not provided, then all three parameters `bucket`, `fileKey` and `version` be provided\n2. if any of parameters `bucket`, `fileKey` and `version` is not provided, then parameter `fileId` must be provided\n3. `metadata` keys can only include letters, numbers, spaces, and the symbols `+`, `-`, or `_`\n4. `metadata` values can only include letters, numbers, spaces, and the symbols `+`, `-`, `_`, `/`, `.` or `,`\n5. `tags` must contain only letters, numbers, spaces, and the symbols `+`, `-`, `.`, `/` or ` _` and they must be unique\n6. `metadata` and `tags` together as JSON objects must have less than 1.5KB of text (1536 characters)"
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"fileId\": \"<string>\",\n  \"fileKey\": \"<string>\",\n  \"bucket\": \"<string>\",\n  \"version\": \"<string>\",\n  \"type\": \"<string>\"\n}"
										},
										{
											"name": "400",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "422",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update metadata and tags to a file",
									"request": {
										"method": "PUT",
										"header": [
											{
												"description": "(Required) JWT Token.",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization's slug.",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"metadata-tags"
											]
										},
										"description": "This endpoint replaces metadata and tags to a target file in the datalake. This endpoint require either `fileId` or `bucket`, `fileKey` and `version` to be provided in order to uniquely identify file.\n\nTarget file query is determined by field `originalFile`. Target file is queried in two ways:\n1. by `fileId` (UUID of a file in datalake)\n2. by `bucket`, `fileKey` and `version`\n\nEndpoint finds target file by given file query and creates new version with updated metadata and tags. If payload doesn't contain neither `metadata` nor `tags`, endpoint will remove all metadata and tags.\n\nParameters `metadata` and `tags` description:\n\n1. `metadata` is JSON object, e.g. { \"key1\": \"value\", \"key2\": \"2\" }\n2. `metadata` can have empty string values\n3. `metadata` entry field can be null and in that case it will remove custom metadata value on target file\n4. `tags` is JSON array, e.g.  [\"a\", \"b\"]\nHere is an example payload for this endpoint:\n{\n  \"originalFile\": {\n    \"fileKey\": \"tetrascience/47ab98d5-cccb-4a7d-86f4-0ff8f7c11bdf/RAW/WAT12/Test_0504/Test_SignOff/PQ Sample Set/1135/19970917300559.json\",\n    \"bucket\": \"ts-platform-dev-datalake\",\n    \"version\": \"dUzbISdeNgKXuSsv.lUT73qr7lYoby_u\",\n    \"type\": \"s3file\"\n  },\n  \"metadata\": {\n    \"a\": \"a\",\n    \"b\": \"\",\n    \"c\": \"Test\"\n  },\n  \"tags\": [\"Boston\", \"San Fran\", \"123\"]\n}\nIt will replace any existing metadata/tags with the ones listed in the payload.\n\nValidations performed by this endpoint:\n\n1. if parameter `fileId` is not provided, then all three parameters `bucket`, `fileKey` and `version` be provided\n2. if any of parameters `bucket`, `fileKey` and `version` is not provided, then parameter `fileId` must be provided\n3. `metadata` keys can only include letters, numbers, spaces, and the symbols `+`, `-`, or `_`\n4. `metadata` values can only include letters, numbers, spaces, and the symbols `+`, `-`, `_`, `/`, `.` or `,`\n5. `tags` must contain only letters, numbers, spaces, and the symbols `+`, `-`, `.`, `/` or ` _` and they must be unique\n6. `metadata` and `tags` together as JSON objects must have less than 1.5KB of text (1536 characters)"
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"fileId\": \"<string>\",\n  \"fileKey\": \"<string>\",\n  \"bucket\": \"<string>\",\n  \"version\": \"<string>\",\n  \"type\": \"<string>\"\n}"
										},
										{
											"name": "400",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "422",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"description": "(Required) JWT Token.",
														"key": "ts-auth-token",
														"value": "<string>"
													},
													{
														"description": "(Required) Your organization's slug.",
														"key": "x-org-slug",
														"value": "<string>"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"RAW_BODY\": \"<json>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/datalake/metadata-tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"datalake",
														"metadata-tags"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Delete a File",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) JWT Token",
										"key": "ts-auth-token",
										"value": "<string>"
									},
									{
										"description": "(Required) Your organization slug",
										"key": "x-org-slug",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/datalake/delete?fileId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"datalake",
										"delete"
									],
									"query": [
										{
											"key": "fileId",
											"value": "<string>",
											"description": "(Required) ID of the file to delete."
										}
									]
								},
								"description": "This endpoint does soft delete. Soft delete means that file will remain in datalake but will be marked as deleted. This means that file will not appear in file search and Athena search"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization slug",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/delete?fileId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"delete"
											],
											"query": [
												{
													"key": "fileId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"entity\": {\n    \"fileId\": \"<string>\",\n    \"filename\": \"<string>\",\n    \"orgSlug\": \"<string>\",\n    \"category\": \"<string>\",\n    \"sourceType\": \"<string>\",\n    \"source\": {\n      \"type\": \"<string>\",\n      \"egnyte\": {\n        \"integrationId\": \"<string>\",\n        \"filePath\": \"<string>\",\n        \"fileName\": \"<string>\",\n        \"groupId\": \"<string>\",\n        \"entryId\": \"<string>\",\n        \"checksum\": \"<string>\",\n        \"versionId\": \"<string>\",\n        \"lastModifiedTime\": \"<string>\",\n        \"versionNum\": 0\n      }\n    }\n  }\n}"
								},
								{
									"name": "404",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization slug",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/delete?fileId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"delete"
											],
											"query": [
												{
													"key": "fileId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Retrieve metadata of a file",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) JWT Token",
										"key": "ts-auth-token",
										"value": "<string>"
									},
									{
										"description": "Your organization's slug.",
										"key": "x-org-slug",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/datalake/metadata/:fileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"datalake",
										"metadata",
										":fileId"
									],
									"variable": [
										{
											"key": "fileId",
											"value": "<string>",
											"description": "(Required) ID of the file"
										}
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "Your organization's slug.",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/metadata/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"metadata",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "(Required) ID of the file"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"location\": \"<string>\"\n}"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "Your organization's slug.",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/metadata/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"metadata",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "(Required) ID of the file"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Retrieve a File",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) JWT Token",
										"key": "ts-auth-token",
										"value": "<string>"
									},
									{
										"description": "(Required) Your organization slug",
										"key": "x-org-slug",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/datalake/retrieve?fileId=<string>&getPresigned=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"datalake",
										"retrieve"
									],
									"query": [
										{
											"key": "fileId",
											"value": "<string>",
											"description": "(Required) ID of the file to retrieve."
										},
										{
											"key": "getPresigned",
											"value": "false",
											"description": "A JSON object with temporary s3 url will returned instead of the actual file content (expires in 5 minutes)"
										}
									]
								},
								"description": "This endpoint retrieves a specific file."
							},
							"response": []
						},
						{
							"name": "List Schemas",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) JWT Token",
										"key": "ts-auth-token",
										"value": "<string>"
									},
									{
										"description": "(Required) Your organization slug",
										"key": "x-org-slug",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/datalake/schemas?type=<string>&version=<string>&fields=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"datalake",
										"schemas"
									],
									"query": [
										{
											"key": "type",
											"value": "<string>",
											"description": "Return only IDS of a given type. Example: `plate-reader`. If omitted, will return the all the IDS the api key has access to."
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "Return a specific version. This must be used with `type`. Example: `v1.0.0`. If omitted, will return all the versions."
										},
										{
											"key": "fields",
											"value": "<string>",
											"description": "Comma-separated list of fields to return (nested paths are also supported). Example: `namespace,slug,version,schema.description`. If omitted, will return full structure. Not-existing fields will be ignored."
										}
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization slug",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/schemas?type=<string>&version=<string>&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"schemas"
											],
											"query": [
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "version",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"schema\": {\n      \"type\": \"<string>\",\n      \"properties\": {\n        \"assay_name\": {\n          \"type\": \"<string>\"\n        },\n        \"temperature\": {\n          \"type\": \"<string>\"\n        },\n        \"timestamp\": {\n          \"type\": \"<string>\",\n          \"format\": \"<string>\"\n        },\n        \"readout\": {\n          \"type\": \"<string>\",\n          \"items\": {\n            \"type\": \"<string>\"\n          }\n        }\n      }\n    },\n    \"expected\": {},\n    \"elasticsearch\": {},\n    \"athena\": {},\n    \"readme\": \"<string>\"\n  },\n  {\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"schema\": {\n      \"type\": \"<string>\",\n      \"properties\": {\n        \"assay_name\": {\n          \"type\": \"<string>\"\n        },\n        \"temperature\": {\n          \"type\": \"<string>\"\n        },\n        \"timestamp\": {\n          \"type\": \"<string>\",\n          \"format\": \"<string>\"\n        },\n        \"readout\": {\n          \"type\": \"<string>\",\n          \"items\": {\n            \"type\": \"<string>\"\n          }\n        }\n      }\n    },\n    \"expected\": {},\n    \"elasticsearch\": {},\n    \"athena\": {},\n    \"readme\": \"<string>\"\n  }\n]"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization slug",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/schemas?type=<string>&version=<string>&fields=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"schemas"
											],
											"query": [
												{
													"key": "type",
													"value": "<string>"
												},
												{
													"key": "version",
													"value": "<string>"
												},
												{
													"key": "fields",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Search files via Elasticsearch Query Language",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) JWT Token for authentication",
										"key": "ts-auth-token",
										"value": "<string>"
									},
									{
										"description": "(Required) Your organization slug",
										"key": "x-org-slug",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"RAW_BODY\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/datalake/searchEql",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"datalake",
										"searchEql"
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token for authentication",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization slug",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/searchEql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"searchEql"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"took\": 0,\n  \"timed_out\": true,\n  \"_shards\": {\n    \"total\": 0,\n    \"successful\": 0,\n    \"skipped\": 0,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 0,\n    \"max_score\": 0,\n    \"hits\": [\n      {\n        \"_index\": \"<string>\",\n        \"_type\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"_score\": 0,\n        \"_source\": {\n          \"fileId\": \"<string>\",\n          \"orgSlug\": \"<string>\",\n          \"category\": \"<string>\",\n          \"sourceType\": \"<string>\",\n          \"source\": {\n            \"type\": \"<string>\",\n            \"egnyte\": {\n              \"integrationId\": \"<string>\",\n              \"filePath\": \"<string>\",\n              \"fileName\": \"<string>\",\n              \"groupId\": \"<string>\",\n              \"entryId\": \"<string>\",\n              \"checksum\": \"<string>\",\n              \"versionId\": \"<string>\",\n              \"lastModifiedTime\": \"<string>\",\n              \"versionNum\": 0\n            }\n          },\n          \"createdAt\": \"<string>\"\n        }\n      },\n      {\n        \"_index\": \"<string>\",\n        \"_type\": \"<string>\",\n        \"_id\": \"<string>\",\n        \"_score\": 0,\n        \"_source\": {\n          \"fileId\": \"<string>\",\n          \"orgSlug\": \"<string>\",\n          \"category\": \"<string>\",\n          \"sourceType\": \"<string>\",\n          \"source\": {\n            \"type\": \"<string>\",\n            \"egnyte\": {\n              \"integrationId\": \"<string>\",\n              \"filePath\": \"<string>\",\n              \"fileName\": \"<string>\",\n              \"groupId\": \"<string>\",\n              \"entryId\": \"<string>\",\n              \"checksum\": \"<string>\",\n              \"versionId\": \"<string>\",\n              \"lastModifiedTime\": \"<string>\",\n              \"versionNum\": 0\n            }\n          },\n          \"createdAt\": \"<string>\"\n        }\n      }\n    ]\n  }\n}"
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "(Required) JWT Token for authentication",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "(Required) Your organization slug",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"RAW_BODY\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/searchEql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"searchEql"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Upload a File",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "JWT Token.",
										"key": "ts-auth-token",
										"value": "<string>"
									},
									{
										"description": "Your organization's slug.",
										"key": "x-org-slug",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"file\": \"<binary>\",\n  \"filename\": \"<string>\",\n  \"meta\": \"<json>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceFileId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/datalake/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"datalake",
										"upload"
									]
								},
								"description": "This endpoint uploads a file to the Data Lake"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "JWT Token.",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "Your organization's slug.",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"file\": \"<binary>\",\n  \"filename\": \"<string>\",\n  \"meta\": \"<json>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceFileId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"upload"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\n  \\\"fileId\\\": \\\"18d021da-b2ce-440c-9ec1-5b4ce93f4197\\n}\""
								},
								{
									"name": "400",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"description": "JWT Token.",
												"key": "ts-auth-token",
												"value": "<string>"
											},
											{
												"description": "Your organization's slug.",
												"key": "x-org-slug",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"file\": \"<binary>\",\n  \"filename\": \"<string>\",\n  \"meta\": \"<json>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"sourceFileId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/datalake/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"datalake",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "fileinfo",
					"item": [
						{
							"name": "file/{fileId}",
							"item": [
								{
									"name": "Get File Information",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fileinfo",
												"file",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
												}
											]
										}
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"file",
														":fileId"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\n  \\\"orgSlug\\\": \\\"tetrascience\\\",\\n  \\\"fileId\\\": \\\"e3b2b43c-ffcd-4e7e-8681-37d3bafb0395\\\",\\n  \\\"traceId\\\": \\\"47616711-f2fc-4156-a807-9112f920b4eb\\\",\\n  \\\"rawFileId\\\": \\\"47616711-f2fc-4156-a807-9112f920b4eb\\\",\\n  \\\"category\\\": \\\"IDS\\\",\\n  \\\"ids\\\": \\\"common/dotmatics-register-compound:v1.0.0\\\",\\n  \\\"filePath\\\": \\\"/register/compound/1000023.json/0.json\\\",\\n  \\\"createdAt\\\": \\\"2020-03-23T02:55:36.000Z\\\",\\n  \\\"integration\\\": {\\n    \\\"id\\\": \\\"a0f94a3b-d83d-48d4-8007-9de047a6af92\\\",\\n    \\\"type\\\": \\\"datapipeline\\\"\\n  },\\n  \\\"source\\\": {\\n    \\\"id\\\": \\\"00f46847-6fb9-4ecd-b5ae-cc3876fbe8c7\\\",\\n    \\\"type\\\": \\\"dotmatics_register_compound\\\",\\n    \\\"name\\\": \\\"dotmatics data connector test 5\\\",\\n  },\\n  \\\"file\\\": {\\n    \\\"bucket\\\": \\\"ts-platform-dev-datalake\\\",\\n    \\\"path\\\": \\\"tetrascience/00f46847-6fb9-4ecd-b5ae-cc3876fbe8c7/IDS/register/compound/1000023.json/0.json\\\",\\n    \\\"checksum\\\": null,\\n    \\\"size\\\": 583,\\n    \\\"type\\\": null,\\n    \\\"version\\\": \\\"vq4p5o5eH.mRczEJtpR1tZ4rFh_RRdeU\\\"\\n  },\\n  \\\"metadata\\\": {\\n    \\\"instrument_name\\\": \\\"dotmatics-test5\\\"\\n  },\\n  \\\"tags\\\": [],\\n  \\\"deleted\\\": false,\\n  \\\"outdated\\\": false\\n}\""
										},
										{
											"name": "401",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"file",
														":fileId"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"file",
														":fileId"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "500",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"file",
														":fileId"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Get File Versions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fileinfo",
												"file",
												":fileId",
												"versions"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
												}
											]
										}
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"file",
														":fileId",
														"versions"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"[{\\n  \\\"orgSlug\\\": \\\"tetrascience\\\",\\n  \\\"fileId\\\": \\\"e3b2b43c-ffcd-4e7e-8681-37d3bafb0395\\\",\\n  \\\"traceId\\\": \\\"47616711-f2fc-4156-a807-9112f920b4eb\\\",\\n  \\\"rawFileId\\\": \\\"47616711-f2fc-4156-a807-9112f920b4eb\\\",\\n  \\\"category\\\": \\\"IDS\\\",\\n  \\\"ids\\\": \\\"common/dotmatics-register-compound:v1.0.0\\\",\\n  \\\"filePath\\\": \\\"/register/compound/1000023.json/0.json\\\",\\n  \\\"createdAt\\\": \\\"2020-03-23T02:55:36.000Z\\\",\\n  \\\"integration\\\": {\\n    \\\"id\\\": \\\"a0f94a3b-d83d-48d4-8007-9de047a6af92\\\",\\n    \\\"type\\\": \\\"datapipeline\\\"\\n  },\\n  \\\"source\\\": {\\n    \\\"id\\\": \\\"00f46847-6fb9-4ecd-b5ae-cc3876fbe8c7\\\",\\n    \\\"type\\\": \\\"dotmatics_register_compound\\\",\\n    \\\"name\\\": \\\"dotmatics data connector test 5\\\",\\n  },\\n  \\\"file\\\": {\\n    \\\"bucket\\\": \\\"ts-platform-dev-datalake\\\",\\n    \\\"path\\\": \\\"tetrascience/00f46847-6fb9-4ecd-b5ae-cc3876fbe8c7/IDS/register/compound/1000023.json/0.json\\\",\\n    \\\"checksum\\\": null,\\n    \\\"size\\\": 583,\\n    \\\"type\\\": null,\\n    \\\"version\\\": \\\"vq4p5o5eH.mRczEJtpR1tZ4rFh_RRdeU\\\"\\n  },\\n  \\\"metadata\\\": {\\n    \\\"instrument_name\\\": \\\"dotmatics-test5\\\"\\n  },\\n  \\\"tags\\\": [],\\n  \\\"deleted\\\": false,\\n  \\\"outdated\\\": false\\n}]\""
										},
										{
											"name": "401",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"file",
														":fileId",
														"versions"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"file",
														":fileId",
														"versions"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "500",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/file/:fileId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"file",
														":fileId",
														"versions"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "search",
							"item": [
								{
									"name": "Search Files (GET)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/fileinfo/search?category=<string>&from=0&fromDate=<date>&excludeTags=<string>&excludeTags=<string>&ids=<string>&integrationId=<string>&integrationType=<string>&metadata.[key]=<string>&pipelineId=<string>&rawFileId=<string>&size=100&sort=asc&sourceId=<string>&sourceType=<string>&traceId=<string>&tags=<string>&tags=<string>&toDate=<date>&workflowId (Added version TDP 3.1.0)=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fileinfo",
												"search"
											],
											"query": [
												{
													"key": "category",
													"value": "<string>",
													"description": "File category.  Values are RAW, IDS, and PROCESSED."
												},
												{
													"key": "from",
													"value": "0",
													"description": "Display files started from specified number in the results array.  By default, files are displayed from the start of the array (the number 0).  This parameter is included if the result set is large, pagination might be required.   This parameter is typically used in conjunction with size."
												},
												{
													"key": "fromDate",
													"value": "<date>",
													"description": "Search for files created on or after a specific date."
												},
												{
													"key": "excludeTags",
													"value": "<string>",
													"description": "Lists the tags that should be excluded; files that have the specified tag associated with them will not appear in search results."
												},
												{
													"key": "excludeTags",
													"value": "<string>",
													"description": "Lists the tags that should be excluded; files that have the specified tag associated with them will not appear in search results."
												},
												{
													"key": "ids",
													"value": "<string>",
													"description": "Name, type, and version of the schema used to create the IDS file.  Format is {namespace}/{idsType}:{idsVersion}."
												},
												{
													"key": "integrationId",
													"value": "<string>",
													"description": "UUID for the integration."
												},
												{
													"key": "integrationType",
													"value": "<string>",
													"description": "Integration type.  Values are EGNYTE, BOX, DOTMATICS, HRB CELLARIO, DATAHUB, PIPELINE, RAW, and API."
												},
												{
													"key": "metadata.[key]",
													"value": "<string>",
													"description": "Searches for files that have specific metadata."
												},
												{
													"key": "pipelineId",
													"value": "<string>",
													"description": "UUID for the pipeline."
												},
												{
													"key": "rawFileId",
													"value": "<string>",
													"description": "UUID for the RAW file that this file was generated from."
												},
												{
													"key": "size",
													"value": "100",
													"description": "Indicates the number of results to return in the request.  This parameter is included if the result set is large, pagination might be required.   This parameter is typically used in conjunction with from."
												},
												{
													"key": "sort",
													"value": "asc",
													"description": "Indicates the sort order for the search results.  Sort occurs on the date (createAt timestamp, which occurred when the file was created in the data lake. Options: desc, asc"
												},
												{
													"key": "sourceId",
													"value": "<string>",
													"description": "UUID for the source."
												},
												{
													"key": "sourceType",
													"value": "<string>",
													"description": "Type of source, which is typically the name of the instrument or other lab equipment used to generate the data or report."
												},
												{
													"key": "traceId",
													"value": "<string>",
													"description": "UUID generated when the RAW file is first uploaded to the data lake. All files derived from the RAW file, such as an IDS file, have the same traceId."
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Lists tags that the user added to the file."
												},
												{
													"key": "tags",
													"value": "<string>",
													"description": "Lists tags that the user added to the file."
												},
												{
													"key": "toDate",
													"value": "<date>",
													"description": "Search for files created on or before a specific date."
												},
												{
													"key": "workflowId (Added version TDP 3.1.0)",
													"value": "<string>",
													"description": "ID for the pipeline workflow."
												}
											]
										}
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/search?category=<string>&from=0&fromDate=<date>&excludeTags=<string>&excludeTags=<string>&ids=<string>&integrationId=<string>&integrationType=<string>&metadata.[key]=<string>&pipelineId=<string>&rawFileId=<string>&size=100&sort=asc&sourceId=<string>&sourceType=<string>&traceId=<string>&tags=<string>&tags=<string>&toDate=<date>&workflowId (Added version TDP 3.1.0)=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"search"
													],
													"query": [
														{
															"key": "category",
															"value": "<string>"
														},
														{
															"key": "from",
															"value": "0"
														},
														{
															"key": "fromDate",
															"value": "<date>"
														},
														{
															"key": "excludeTags",
															"value": "<string>"
														},
														{
															"key": "excludeTags",
															"value": "<string>"
														},
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "integrationId",
															"value": "<string>"
														},
														{
															"key": "integrationType",
															"value": "<string>"
														},
														{
															"key": "metadata.[key]",
															"value": "<string>"
														},
														{
															"key": "pipelineId",
															"value": "<string>"
														},
														{
															"key": "rawFileId",
															"value": "<string>"
														},
														{
															"key": "size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "asc"
														},
														{
															"key": "sourceId",
															"value": "<string>"
														},
														{
															"key": "sourceType",
															"value": "<string>"
														},
														{
															"key": "traceId",
															"value": "<string>"
														},
														{
															"key": "tags",
															"value": "<string>"
														},
														{
															"key": "tags",
															"value": "<string>"
														},
														{
															"key": "toDate",
															"value": "<date>"
														},
														{
															"key": "workflowId (Added version TDP 3.1.0)",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"from\": 0,\n  \"size\": 0,\n  \"sort\": \"<string>\",\n  \"hasNext\": true,\n  \"hits\": [\n    {\n      \"fileId\": \"<string>\",\n      \"filePath\": \"<string>\",\n      \"orgSlug\": \"<string>\",\n      \"traceId\": \"<string>\",\n      \"file\": {\n        \"bucket\": \"<string>\",\n        \"path\": \"<string>\",\n        \"checksum\": \"<string>\",\n        \"size\": 0,\n        \"type\": {},\n        \"version\": \"<string>\"\n      },\n      \"createdAt\": \"<string>\",\n      \"category\": \"<string>\",\n      \"integration\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"workflowId\": \"<string>\",\n        \"masterScript\": \"<string>\",\n        \"taskScript\": \"<string>\",\n        \"taskSlug\": \"<string>\",\n        \"taskExecutionId\": \"<string>\"\n      },\n      \"source\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datapipeline\": {\n          \"workflowId\": \"<string>\",\n          \"taskExecutionId\": \"<string>\",\n          \"taskSlug\": \"<string>\",\n          \"taskScript\": \"<string>\",\n          \"masterScript\": \"<string>\",\n          \"inputFileId\": \"<string>\"\n        }\n      },\n      \"rawFileId\": \"<string>\",\n      \"ids\": \"<string>\",\n      \"metadata\": {\n        \"Version\": \"<string>\",\n        \"CREATED_FOR\": \"<string>\",\n        \"cheeeng\": \"<string>\"\n      },\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"deleted\": true,\n      \"outdated\": true\n    },\n    {\n      \"fileId\": \"<string>\",\n      \"filePath\": \"<string>\",\n      \"orgSlug\": \"<string>\",\n      \"traceId\": \"<string>\",\n      \"file\": {\n        \"bucket\": \"<string>\",\n        \"path\": \"<string>\",\n        \"checksum\": \"<string>\",\n        \"size\": 0,\n        \"type\": {},\n        \"version\": \"<string>\"\n      },\n      \"createdAt\": \"<string>\",\n      \"category\": \"<string>\",\n      \"integration\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"workflowId\": \"<string>\",\n        \"masterScript\": \"<string>\",\n        \"taskScript\": \"<string>\",\n        \"taskSlug\": \"<string>\",\n        \"taskExecutionId\": \"<string>\"\n      },\n      \"source\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datapipeline\": {\n          \"workflowId\": \"<string>\",\n          \"taskExecutionId\": \"<string>\",\n          \"taskSlug\": \"<string>\",\n          \"taskScript\": \"<string>\",\n          \"masterScript\": \"<string>\",\n          \"inputFileId\": \"<string>\"\n        }\n      },\n      \"rawFileId\": \"<string>\",\n      \"ids\": \"<string>\",\n      \"metadata\": {\n        \"Version\": \"<string>\",\n        \"CREATED_FOR\": \"<string>\",\n        \"cheeeng\": \"<string>\"\n      },\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"deleted\": true,\n      \"outdated\": true\n    }\n  ]\n}"
										},
										{
											"name": "401",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/search?category=<string>&from=0&fromDate=<date>&excludeTags=<string>&excludeTags=<string>&ids=<string>&integrationId=<string>&integrationType=<string>&metadata.[key]=<string>&pipelineId=<string>&rawFileId=<string>&size=100&sort=asc&sourceId=<string>&sourceType=<string>&traceId=<string>&tags=<string>&tags=<string>&toDate=<date>&workflowId (Added version TDP 3.1.0)=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"search"
													],
													"query": [
														{
															"key": "category",
															"value": "<string>"
														},
														{
															"key": "from",
															"value": "0"
														},
														{
															"key": "fromDate",
															"value": "<date>"
														},
														{
															"key": "excludeTags",
															"value": "<string>"
														},
														{
															"key": "excludeTags",
															"value": "<string>"
														},
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "integrationId",
															"value": "<string>"
														},
														{
															"key": "integrationType",
															"value": "<string>"
														},
														{
															"key": "metadata.[key]",
															"value": "<string>"
														},
														{
															"key": "pipelineId",
															"value": "<string>"
														},
														{
															"key": "rawFileId",
															"value": "<string>"
														},
														{
															"key": "size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "asc"
														},
														{
															"key": "sourceId",
															"value": "<string>"
														},
														{
															"key": "sourceType",
															"value": "<string>"
														},
														{
															"key": "traceId",
															"value": "<string>"
														},
														{
															"key": "tags",
															"value": "<string>"
														},
														{
															"key": "tags",
															"value": "<string>"
														},
														{
															"key": "toDate",
															"value": "<date>"
														},
														{
															"key": "workflowId (Added version TDP 3.1.0)",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "500",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/search?category=<string>&from=0&fromDate=<date>&excludeTags=<string>&excludeTags=<string>&ids=<string>&integrationId=<string>&integrationType=<string>&metadata.[key]=<string>&pipelineId=<string>&rawFileId=<string>&size=100&sort=asc&sourceId=<string>&sourceType=<string>&traceId=<string>&tags=<string>&tags=<string>&toDate=<date>&workflowId (Added version TDP 3.1.0)=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"search"
													],
													"query": [
														{
															"key": "category",
															"value": "<string>"
														},
														{
															"key": "from",
															"value": "0"
														},
														{
															"key": "fromDate",
															"value": "<date>"
														},
														{
															"key": "excludeTags",
															"value": "<string>"
														},
														{
															"key": "excludeTags",
															"value": "<string>"
														},
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "integrationId",
															"value": "<string>"
														},
														{
															"key": "integrationType",
															"value": "<string>"
														},
														{
															"key": "metadata.[key]",
															"value": "<string>"
														},
														{
															"key": "pipelineId",
															"value": "<string>"
														},
														{
															"key": "rawFileId",
															"value": "<string>"
														},
														{
															"key": "size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "asc"
														},
														{
															"key": "sourceId",
															"value": "<string>"
														},
														{
															"key": "sourceType",
															"value": "<string>"
														},
														{
															"key": "traceId",
															"value": "<string>"
														},
														{
															"key": "tags",
															"value": "<string>"
														},
														{
															"key": "tags",
															"value": "<string>"
														},
														{
															"key": "toDate",
															"value": "<date>"
														},
														{
															"key": "workflowId (Added version TDP 3.1.0)",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Search Files (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"category\": \"<string>\",\n  \"from\": 0,\n  \"fromDate\": \"<date>\",\n  \"excludeTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": \"<string>\",\n  \"integrationId\": \"<string>\",\n  \"integrationType\": \"<string>\",\n  \"metadata\": {},\n  \"pipelineId\": \"<string>\",\n  \"rawFileId\": \"<string>\",\n  \"size\": 100,\n  \"sort\": \"asc\",\n  \"sourceId\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"toDate\": \"<date>\",\n  \"traceId\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fileinfo/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fileinfo",
												"search"
											]
										}
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"category\": \"<string>\",\n  \"from\": 0,\n  \"fromDate\": \"<date>\",\n  \"excludeTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": \"<string>\",\n  \"integrationId\": \"<string>\",\n  \"integrationType\": \"<string>\",\n  \"metadata\": {},\n  \"pipelineId\": \"<string>\",\n  \"rawFileId\": \"<string>\",\n  \"size\": 100,\n  \"sort\": \"asc\",\n  \"sourceId\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"toDate\": \"<date>\",\n  \"traceId\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"search"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"from\": 0,\n  \"size\": 0,\n  \"sort\": \"<string>\",\n  \"hasNext\": true,\n  \"hits\": [\n    {\n      \"fileId\": \"<string>\",\n      \"filePath\": \"<string>\",\n      \"orgSlug\": \"<string>\",\n      \"traceId\": \"<string>\",\n      \"file\": {\n        \"bucket\": \"<string>\",\n        \"path\": \"<string>\",\n        \"checksum\": \"<string>\",\n        \"size\": 0,\n        \"type\": {},\n        \"version\": \"<string>\"\n      },\n      \"createdAt\": \"<string>\",\n      \"category\": \"<string>\",\n      \"integration\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"workflowId\": \"<string>\",\n        \"masterScript\": \"<string>\",\n        \"taskScript\": \"<string>\",\n        \"taskSlug\": \"<string>\",\n        \"taskExecutionId\": \"<string>\"\n      },\n      \"source\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datapipeline\": {\n          \"workflowId\": \"<string>\",\n          \"taskExecutionId\": \"<string>\",\n          \"taskSlug\": \"<string>\",\n          \"taskScript\": \"<string>\",\n          \"masterScript\": \"<string>\",\n          \"inputFileId\": \"<string>\"\n        }\n      },\n      \"rawFileId\": \"<string>\",\n      \"ids\": \"<string>\",\n      \"metadata\": {\n        \"Version\": \"<string>\",\n        \"CREATED_FOR\": \"<string>\",\n        \"cheeeng\": \"<string>\"\n      },\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"deleted\": true,\n      \"outdated\": true\n    },\n    {\n      \"fileId\": \"<string>\",\n      \"filePath\": \"<string>\",\n      \"orgSlug\": \"<string>\",\n      \"traceId\": \"<string>\",\n      \"file\": {\n        \"bucket\": \"<string>\",\n        \"path\": \"<string>\",\n        \"checksum\": \"<string>\",\n        \"size\": 0,\n        \"type\": {},\n        \"version\": \"<string>\"\n      },\n      \"createdAt\": \"<string>\",\n      \"category\": \"<string>\",\n      \"integration\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"workflowId\": \"<string>\",\n        \"masterScript\": \"<string>\",\n        \"taskScript\": \"<string>\",\n        \"taskSlug\": \"<string>\",\n        \"taskExecutionId\": \"<string>\"\n      },\n      \"source\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"datapipeline\": {\n          \"workflowId\": \"<string>\",\n          \"taskExecutionId\": \"<string>\",\n          \"taskSlug\": \"<string>\",\n          \"taskScript\": \"<string>\",\n          \"masterScript\": \"<string>\",\n          \"inputFileId\": \"<string>\"\n        }\n      },\n      \"rawFileId\": \"<string>\",\n      \"ids\": \"<string>\",\n      \"metadata\": {\n        \"Version\": \"<string>\",\n        \"CREATED_FOR\": \"<string>\",\n        \"cheeeng\": \"<string>\"\n      },\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"deleted\": true,\n      \"outdated\": true\n    }\n  ]\n}"
										},
										{
											"name": "401",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"category\": \"<string>\",\n  \"from\": 0,\n  \"fromDate\": \"<date>\",\n  \"excludeTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": \"<string>\",\n  \"integrationId\": \"<string>\",\n  \"integrationType\": \"<string>\",\n  \"metadata\": {},\n  \"pipelineId\": \"<string>\",\n  \"rawFileId\": \"<string>\",\n  \"size\": 100,\n  \"sort\": \"asc\",\n  \"sourceId\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"toDate\": \"<date>\",\n  \"traceId\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"search"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "500",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"category\": \"<string>\",\n  \"from\": 0,\n  \"fromDate\": \"<date>\",\n  \"excludeTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": \"<string>\",\n  \"integrationId\": \"<string>\",\n  \"integrationType\": \"<string>\",\n  \"metadata\": {},\n  \"pipelineId\": \"<string>\",\n  \"rawFileId\": \"<string>\",\n  \"size\": 100,\n  \"sort\": \"asc\",\n  \"sourceId\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"toDate\": \"<date>\",\n  \"traceId\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"search"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "files/{fileId}",
							"item": [
								{
									"name": "Add Labels (POST)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fileinfo",
												"files",
												":fileId",
												"labels"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
												}
											]
										}
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"files",
														":fileId",
														"labels"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]"
										},
										{
											"name": "401",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"files",
														":fileId",
														"labels"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"files",
														":fileId",
														"labels"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "500",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"files",
														":fileId",
														"labels"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete Labels (DELETE)",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels?id={{labelId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fileinfo",
												"files",
												":fileId",
												"labels"
											],
											"query": [
												{
													"key": "id",
													"value": "{{labelId}}"
												}
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<string>",
													"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
												}
											]
										}
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"files",
														":fileId",
														"labels"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "401",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"files",
														":fileId",
														"labels"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "404",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"files",
														":fileId",
														"labels"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "500",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/fileinfo/files/:fileId/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"fileinfo",
														"files",
														":fileId",
														"labels"
													],
													"variable": [
														{
															"key": "fileId",
															"value": "<string>",
															"description": "(Required) ID assigned to the file when it was created in the data lake. Type is uuid."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Search Files (POST) - draft",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"category\": \"<string>\",\n  \"from\": 0,\n  \"fromDate\": \"<date>\",\n  \"excludeTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": \"<string>\",\n  \"integrationId\": \"<string>\",\n  \"integrationType\": \"<string>\",\n  \"metadata\": {},\n  \"pipelineId\": \"<string>\",\n  \"rawFileId\": \"<string>\",\n  \"size\": 100,\n  \"sort\": \"asc\",\n  \"sourceId\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"toDate\": \"<date>\",\n  \"traceId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/fileinfo/search-draft",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"fileinfo",
										"search-draft"
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"category\": \"<string>\",\n  \"from\": 0,\n  \"fromDate\": \"<date>\",\n  \"excludeTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": \"<string>\",\n  \"integrationId\": \"<string>\",\n  \"integrationType\": \"<string>\",\n  \"metadata\": {},\n  \"pipelineId\": \"<string>\",\n  \"rawFileId\": \"<string>\",\n  \"size\": 100,\n  \"sort\": \"asc\",\n  \"sourceId\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"toDate\": \"<date>\",\n  \"traceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fileinfo/search-draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fileinfo",
												"search-draft"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"from\": 0,\n  \"size\": 0,\n  \"sort\": \"<string>\",\n  \"hasNext\": true,\n  \"hits\": [\n    {\n      \"orgSlug\": \"<string>\",\n      \"fileId\": \"<string>\",\n      \"traceId\": \"<string>\",\n      \"rawFileId\": \"<string>\",\n      \"category\": \"<string>\",\n      \"ids\": \"<string>\",\n      \"filePath\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"integration\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"source\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"dotmatics_register_compound\": {}\n      },\n      \"file\": {\n        \"bucket\": \"<string>\",\n        \"path\": \"<string>\",\n        \"checksum\": {},\n        \"size\": 0,\n        \"type\": {},\n        \"version\": \"<string>\"\n      },\n      \"metadata\": {\n        \"instrument_name\": \"<string>\"\n      },\n      \"tags\": \"<array>\",\n      \"deleted\": true,\n      \"outdated\": true\n    },\n    {\n      \"orgSlug\": \"<string>\",\n      \"fileId\": \"<string>\",\n      \"traceId\": \"<string>\",\n      \"rawFileId\": \"<string>\",\n      \"category\": \"<string>\",\n      \"ids\": \"<string>\",\n      \"filePath\": \"<string>\",\n      \"createdAt\": \"<string>\",\n      \"integration\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      \"source\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"name\": \"<string>\",\n        \"dotmatics_register_compound\": {}\n      },\n      \"file\": {\n        \"bucket\": \"<string>\",\n        \"path\": \"<string>\",\n        \"checksum\": {},\n        \"size\": 0,\n        \"type\": {},\n        \"version\": \"<string>\"\n      },\n      \"metadata\": {\n        \"instrument_name\": \"<string>\"\n      },\n      \"tags\": \"<array>\",\n      \"deleted\": true,\n      \"outdated\": true\n    }\n  ]\n}"
								},
								{
									"name": "401",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"category\": \"<string>\",\n  \"from\": 0,\n  \"fromDate\": \"<date>\",\n  \"excludeTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": \"<string>\",\n  \"integrationId\": \"<string>\",\n  \"integrationType\": \"<string>\",\n  \"metadata\": {},\n  \"pipelineId\": \"<string>\",\n  \"rawFileId\": \"<string>\",\n  \"size\": 100,\n  \"sort\": \"asc\",\n  \"sourceId\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"toDate\": \"<date>\",\n  \"traceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fileinfo/search-draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fileinfo",
												"search-draft"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "500",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"category\": \"<string>\",\n  \"from\": 0,\n  \"fromDate\": \"<date>\",\n  \"excludeTags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ids\": \"<string>\",\n  \"integrationId\": \"<string>\",\n  \"integrationType\": \"<string>\",\n  \"metadata\": {},\n  \"pipelineId\": \"<string>\",\n  \"rawFileId\": \"<string>\",\n  \"size\": 100,\n  \"sort\": \"asc\",\n  \"sourceId\": \"<string>\",\n  \"sourceType\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"toDate\": \"<date>\",\n  \"traceId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/fileinfo/search-draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"fileinfo",
												"search-draft"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"statusCode\": 0,\n  \"error\": \"<string>\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Artifact External v1/artifact",
			"item": [
				{
					"name": "build Artifact",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/artifact/:type/:namespace/:slug/:version?force=<string>&ecrCached=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"artifact",
								":type",
								":namespace",
								":slug",
								":version"
							],
							"query": [
								{
									"key": "force",
									"value": "<string>"
								},
								{
									"key": "ecrCached",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "type",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "namespace",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "slug",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "version",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/:type/:namespace/:slug/:version?force=<string>&ecrCached=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										":type",
										":namespace",
										":slug",
										":version"
									],
									"query": [
										{
											"key": "force",
											"value": "<string>"
										},
										{
											"key": "ecrCached",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"namespace\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"version\": \"<string>\"\n}"
						},
						{
							"name": "Build Started",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/:type/:namespace/:slug/:version?force=<string>&ecrCached=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										":type",
										":namespace",
										":slug",
										":version"
									],
									"query": [
										{
											"key": "force",
											"value": "<string>"
										},
										{
											"key": "ecrCached",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"namespace\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"version\": \"<string>\",\n  \"build\": {\n    \"id\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"currentPhase\": \"<string>\",\n    \"buildStatus\": \"<string>\",\n    \"buildComplete\": \"<boolean>\"\n  }\n}"
						},
						{
							"name": "Invalid inputs",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/:type/:namespace/:slug/:version?force=<string>&ecrCached=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										":type",
										":namespace",
										":slug",
										":version"
									],
									"query": [
										{
											"key": "force",
											"value": "<string>"
										},
										{
											"key": "ecrCached",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Not allowed to perform this action",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/:type/:namespace/:slug/:version?force=<string>&ecrCached=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										":type",
										":namespace",
										":slug",
										":version"
									],
									"query": [
										{
											"key": "force",
											"value": "<string>"
										},
										{
											"key": "ecrCached",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "get Build By Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/artifact/builds/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"artifact",
								"builds",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/builds/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"builds",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"namespace\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"version\": \"<string>\",\n  \"build\": {\n    \"id\": \"<string>\",\n    \"startTime\": \"<dateTime>\",\n    \"endTime\": \"<dateTime>\",\n    \"currentPhase\": \"<string>\",\n    \"buildStatus\": \"<string>\",\n    \"buildComplete\": \"<boolean>\"\n  }\n}"
						},
						{
							"name": "Not allowed to perform this action",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/builds/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"builds",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Not found or not visible to user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/builds/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"builds",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "get Build Log By Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/artifact/build-logs/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"artifact",
								"build-logs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/build-logs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"build-logs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"events\": [\n    {\n      \"enim_c14\": -40002445,\n      \"aliqua6\": \"esse voluptate cupidatat adipisicing\",\n      \"anim_59c\": false\n    },\n    {\n      \"adipisicing98\": \"anim laborum aliqua sit\",\n      \"esse5\": \"tempor qui\"\n    }\n  ],\n  \"nextToken\": \"<string>\"\n}"
						},
						{
							"name": "Not allowed to perform this action",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/build-logs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"build-logs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "get Artifact Readme",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/artifact/artifact-readme/:type/:namespace/:slug/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"artifact",
								"artifact-readme",
								":type",
								":namespace",
								":slug",
								":version"
							],
							"variable": [
								{
									"key": "type",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "namespace",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "slug",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "version",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/artifact-readme/:type/:namespace/:slug/:version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"artifact-readme",
										":type",
										":namespace",
										":slug",
										":version"
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"content\": \"<string>\"\n}"
						},
						{
							"name": "Not found or not visible to user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/artifact-readme/:type/:namespace/:slug/:version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"artifact-readme",
										":type",
										":namespace",
										":slug",
										":version"
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "get Artifact File Content",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/artifact/content/:type/:namespace/:slug/:version/:fileId?download=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"artifact",
								"content",
								":type",
								":namespace",
								":slug",
								":version",
								":fileId"
							],
							"query": [
								{
									"key": "download",
									"value": "<boolean>"
								}
							],
							"variable": [
								{
									"key": "type",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "namespace",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "slug",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "version",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "fileId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/content/:type/:namespace/:slug/:version/:fileId?download=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"content",
										":type",
										":namespace",
										":slug",
										":version",
										":fileId"
									],
									"query": [
										{
											"key": "download",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"url\": \"<string>\"\n}"
						},
						{
							"name": "Not found or not visible to user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/content/:type/:namespace/:slug/:version/:fileId?download=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"content",
										":type",
										":namespace",
										":slug",
										":version",
										":fileId"
									],
									"query": [
										{
											"key": "download",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "fileId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "list Artifacts By Type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/artifact/list/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"artifact",
								"list",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/list/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"list",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"source\": \"<string>\"\n  },\n  {\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"source\": \"<string>\"\n  }\n]"
						}
					]
				},
				{
					"name": "describe Artifact",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/artifact/describe/:type/:namespace/:slug/:version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"artifact",
								"describe",
								":type",
								":namespace",
								":slug",
								":version"
							],
							"variable": [
								{
									"key": "type",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "namespace",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "slug",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "version",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/describe/:type/:namespace/:slug/:version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"describe",
										":type",
										":namespace",
										":slug",
										":version"
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Not found or not visible to user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/describe/:type/:namespace/:slug/:version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"describe",
										":type",
										":namespace",
										":slug",
										":version"
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "get Task Script Build Log",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/artifact/task-scripts/:namespace/:slug/:version/build-log?nextToken=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"artifact",
								"task-scripts",
								":namespace",
								":slug",
								":version",
								"build-log"
							],
							"query": [
								{
									"key": "nextToken",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "namespace",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "slug",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "version",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/task-scripts/:namespace/:slug/:version/build-log?nextToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"task-scripts",
										":namespace",
										":slug",
										":version",
										"build-log"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"content\": \"<string>\"\n}"
						},
						{
							"name": "Not found or not visible to user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "ts-auth-token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifact/task-scripts/:namespace/:slug/:version/build-log?nextToken=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifact",
										"task-scripts",
										":namespace",
										":slug",
										":version",
										"build-log"
									],
									"query": [
										{
											"key": "nextToken",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "namespace",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "version",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Artifact Management External v1/artifacts",
			"item": [
				{
					"name": "protocols",
					"item": [
						{
							"name": "{namespace}",
							"item": [
								{
									"name": "{slug}",
									"item": [
										{
											"name": "{version}",
											"item": [
												{
													"name": "files",
													"item": [
														{
															"name": "Get available file slugs for protocol",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/files",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"protocols",
																		":namespace",
																		":slug",
																		":version",
																		"files"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																},
																"description": "Returns which file slugs are available to retrieve for this protocol"
															},
															"response": [
																{
																	"name": "Successfully fetched available Protocol file slugs",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/files",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"protocols",
																				":namespace",
																				":slug",
																				":version",
																				"files"
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
																},
																{
																	"name": "Incorrect input provided",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/files",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"protocols",
																				":namespace",
																				":slug",
																				":version",
																				"files"
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																},
																{
																	"name": "Not found or not visible to user",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/files",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"protocols",
																				":namespace",
																				":slug",
																				":version",
																				"files"
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Get contents for a protocol file",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"protocols",
																		":namespace",
																		":slug",
																		":version",
																		"files",
																		":fileSlug"
																	],
																	"query": [
																		{
																			"key": "download",
																			"value": "<boolean>",
																			"description": "If set to true, return a download url"
																		}
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		},
																		{
																			"key": "fileSlug",
																			"value": "<string>",
																			"description": "(Required) File slug corresponding to file within a protocol"
																		}
																	]
																},
																"description": "Returns the file contents for a protocol file given a namespace, slug, version, and file slug"
															},
															"response": [
																{
																	"name": "Successfully fetched file",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"protocols",
																				":namespace",
																				":slug",
																				":version",
																				"files",
																				":fileSlug"
																			],
																			"query": [
																				{
																					"key": "download",
																					"value": "<boolean>"
																				}
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				},
																				{
																					"key": "fileSlug",
																					"value": "<string>",
																					"description": "(Required) File slug corresponding to file within a protocol"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"url\": \"<string>\"\n}"
																},
																{
																	"name": "Incorrect input provided",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"protocols",
																				":namespace",
																				":slug",
																				":version",
																				"files",
																				":fileSlug"
																			],
																			"query": [
																				{
																					"key": "download",
																					"value": "<boolean>"
																				}
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				},
																				{
																					"key": "fileSlug",
																					"value": "<string>",
																					"description": "(Required) File slug corresponding to file within a protocol"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																},
																{
																	"name": "Not found or not visible to user",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"protocols",
																				":namespace",
																				":slug",
																				":version",
																				"files",
																				":fileSlug"
																			],
																			"query": [
																				{
																					"key": "download",
																					"value": "<boolean>"
																				}
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				},
																				{
																					"key": "fileSlug",
																					"value": "<string>",
																					"description": "(Required) File slug corresponding to file within a protocol"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "Get single protocol",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"protocols",
																":namespace",
																":slug",
																":version"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																},
																{
																	"key": "version",
																	"value": "<string>",
																	"description": "(Required) Artifact version"
																}
															]
														},
														"description": "Returns a single protocol artifact matching the namespace, slug, and version"
													},
													"response": [
														{
															"name": "Successfully fetched ProtocolObject",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"protocols",
																		":namespace",
																		":slug",
																		":version"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"version\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"lastUpdatedAt\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"otherVersions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														},
														{
															"name": "Not found or not visible to user",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"protocols",
																		":namespace",
																		":slug",
																		":version"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Get related artifacts",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/relationships",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"protocols",
																":namespace",
																":slug",
																":version",
																"relationships"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																},
																{
																	"key": "version",
																	"value": "<string>",
																	"description": "(Required) Artifact version"
																}
															]
														},
														"description": "Returns a list of the relationships a protocol artifact has with other artifacts"
													},
													"response": [
														{
															"name": "Successfully fetched Relationships",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/relationships",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"protocols",
																		":namespace",
																		":slug",
																		":version",
																		"relationships"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ids\": [\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ],\n  \"taskScripts\": [\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ],\n  \"protocols\": [\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Not found or not visible to user",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/relationships",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"protocols",
																		":namespace",
																		":slug",
																		":version",
																		"relationships"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Get labels for a protocol",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/labels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"protocols",
																":namespace",
																":slug",
																":version",
																"labels"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																},
																{
																	"key": "version",
																	"value": "<string>",
																	"description": "(Required) Artifact version"
																}
															]
														},
														"description": "Returns a list of the labels associated with a protocol artifact"
													},
													"response": [
														{
															"name": "Successfully fetched Labels",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/labels",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"protocols",
																		":namespace",
																		":slug",
																		":version",
																		"labels"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]"
														},
														{
															"name": "Not found or not visible to user",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug/:version/labels",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"protocols",
																		":namespace",
																		":slug",
																		":version",
																		"labels"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List all protocols for namespace/slug",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug?latest_only=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"artifacts",
														"protocols",
														":namespace",
														":slug"
													],
													"query": [
														{
															"key": "latest_only",
															"value": "<boolean>",
															"description": "Only return the latest version of each artifact"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
														},
														{
															"key": "slug",
															"value": "<string>",
															"description": "(Required) Artifact slug"
														}
													]
												},
												"description": "Returns a list of all protocol artifacts given a namespace and slug"
											},
											"response": [
												{
													"name": "Successfully fetched ProtocolObject list",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "ts-auth-token",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug?latest_only=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"protocols",
																":namespace",
																":slug"
															],
															"query": [
																{
																	"key": "latest_only",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												},
												{
													"name": "Not found or not visible to user",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "ts-auth-token",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace/:slug?latest_only=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"protocols",
																":namespace",
																":slug"
															],
															"query": [
																{
																	"key": "latest_only",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "List all protocols for namespace",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace?latest_only=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"artifacts",
												"protocols",
												":namespace"
											],
											"query": [
												{
													"key": "latest_only",
													"value": "<boolean>",
													"description": "Only return the latest version of each artifact"
												}
											],
											"variable": [
												{
													"key": "namespace",
													"value": "<string>",
													"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
												}
											]
										},
										"description": "Returns a list of all protocol artifacts given a namespace"
									},
									"response": [
										{
											"name": "Successfully fetched ProtocolObject list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace?latest_only=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"artifacts",
														"protocols",
														":namespace"
													],
													"query": [
														{
															"key": "latest_only",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
										},
										{
											"name": "Not found or not visible to user",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/artifacts/protocols/:namespace?latest_only=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"artifacts",
														"protocols",
														":namespace"
													],
													"query": [
														{
															"key": "latest_only",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "List all protocols",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifacts/protocols?namespace_type=<string>&latest_only=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifacts",
										"protocols"
									],
									"query": [
										{
											"key": "namespace_type",
											"value": "<string>",
											"description": "Namespace type of artifacts to be returned ('common', 'client', or 'private')"
										},
										{
											"key": "latest_only",
											"value": "<boolean>",
											"description": "Only return the latest version of each artifact"
										}
									]
								},
								"description": "Returns a list of all protocol artifacts, optionally filtered by namespace type"
							},
							"response": [
								{
									"name": "Successfully fetched ProtocolObject list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/artifacts/protocols?namespace_type=<string>&latest_only=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"artifacts",
												"protocols"
											],
											"query": [
												{
													"key": "namespace_type",
													"value": "<string>"
												},
												{
													"key": "latest_only",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "Search for items",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifacts/protocols/search?value=<string>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifacts",
										"protocols",
										"search"
									],
									"query": [
										{
											"key": "value",
											"value": "<string>",
											"description": "(Required) The search string"
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of results to return"
										}
									]
								},
								"description": "Search for items using specified criteria"
							},
							"response": [
								{
									"name": "A list of items that match the search query",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/artifacts/protocols/search?value=<string>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"artifacts",
												"protocols",
												"search"
											],
											"query": [
												{
													"key": "value",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "task-scripts",
					"item": [
						{
							"name": "{namespace}",
							"item": [
								{
									"name": "{slug}",
									"item": [
										{
											"name": "{version}",
											"item": [
												{
													"name": "files",
													"item": [
														{
															"name": "Get available file slugs for task-script",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/files",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"task-scripts",
																		":namespace",
																		":slug",
																		":version",
																		"files"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																},
																"description": "Returns which file slugs are available to retrieve for this task-script"
															},
															"response": [
																{
																	"name": "Successfully fetched available Task Script file slugs",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/files",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"task-scripts",
																				":namespace",
																				":slug",
																				":version",
																				"files"
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
																},
																{
																	"name": "Incorrect input provided",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/files",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"task-scripts",
																				":namespace",
																				":slug",
																				":version",
																				"files"
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																},
																{
																	"name": "Not found or not visible to user",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/files",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"task-scripts",
																				":namespace",
																				":slug",
																				":version",
																				"files"
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Get contents of a task-script file",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"task-scripts",
																		":namespace",
																		":slug",
																		":version",
																		"files",
																		":fileSlug"
																	],
																	"query": [
																		{
																			"key": "download",
																			"value": "<boolean>",
																			"description": "If set to true, return a download url"
																		}
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		},
																		{
																			"key": "fileSlug",
																			"value": "<string>",
																			"description": "(Required) File slug corresponding to file within a task-script"
																		}
																	]
																},
																"description": "Returns the file contents for a task-script file given a namespace, slug, version, and file slug"
															},
															"response": [
																{
																	"name": "Successfully fetched file",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"task-scripts",
																				":namespace",
																				":slug",
																				":version",
																				"files",
																				":fileSlug"
																			],
																			"query": [
																				{
																					"key": "download",
																					"value": "<boolean>"
																				}
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				},
																				{
																					"key": "fileSlug",
																					"value": "<string>",
																					"description": "(Required) File slug corresponding to file within a task-script"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"url\": \"<string>\"\n}"
																},
																{
																	"name": "Incorrect input provided",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"task-scripts",
																				":namespace",
																				":slug",
																				":version",
																				"files",
																				":fileSlug"
																			],
																			"query": [
																				{
																					"key": "download",
																					"value": "<boolean>"
																				}
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				},
																				{
																					"key": "fileSlug",
																					"value": "<string>",
																					"description": "(Required) File slug corresponding to file within a task-script"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																},
																{
																	"name": "Not found or not visible to user",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"task-scripts",
																				":namespace",
																				":slug",
																				":version",
																				"files",
																				":fileSlug"
																			],
																			"query": [
																				{
																					"key": "download",
																					"value": "<boolean>"
																				}
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				},
																				{
																					"key": "fileSlug",
																					"value": "<string>",
																					"description": "(Required) File slug corresponding to file within a task-script"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "Get single task-script",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"task-scripts",
																":namespace",
																":slug",
																":version"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																},
																{
																	"key": "version",
																	"value": "<string>",
																	"description": "(Required) Artifact version"
																}
															]
														},
														"description": "Returns a single task-script artifact matching the namespace, slug, and version"
													},
													"response": [
														{
															"name": "Successfully fetched TaskScriptObject",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"task-scripts",
																		":namespace",
																		":slug",
																		":version"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"version\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"lastUpdatedAt\": \"<dateTime>\",\n  \"sdkVersion\": \"<string>\",\n  \"hash\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"otherVersions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														},
														{
															"name": "Not found or not visible to user",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"task-scripts",
																		":namespace",
																		":slug",
																		":version"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Get artifacts related to task-script",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/relationships",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"task-scripts",
																":namespace",
																":slug",
																":version",
																"relationships"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																},
																{
																	"key": "version",
																	"value": "<string>",
																	"description": "(Required) Artifact version"
																}
															]
														},
														"description": "Returns a list of the relationships a task-script artifact has with other artifacts"
													},
													"response": [
														{
															"name": "Successfully fetched Relationships",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/relationships",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"task-scripts",
																		":namespace",
																		":slug",
																		":version",
																		"relationships"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ids\": [\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ],\n  \"taskScripts\": [\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ],\n  \"protocols\": [\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Not found or not visible to user",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/relationships",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"task-scripts",
																		":namespace",
																		":slug",
																		":version",
																		"relationships"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Get labels for a task-script",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/labels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"task-scripts",
																":namespace",
																":slug",
																":version",
																"labels"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																},
																{
																	"key": "version",
																	"value": "<string>",
																	"description": "(Required) Artifact version"
																}
															]
														},
														"description": "Returns a list of the labels associated with a task-script artifact"
													},
													"response": [
														{
															"name": "Successfully fetched Labels",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/labels",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"task-scripts",
																		":namespace",
																		":slug",
																		":version",
																		"labels"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]"
														},
														{
															"name": "Not found or not visible to user",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug/:version/labels",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"task-scripts",
																		":namespace",
																		":slug",
																		":version",
																		"labels"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List all task-scripts for a namespace/slug",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug?latest_only=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"artifacts",
														"task-scripts",
														":namespace",
														":slug"
													],
													"query": [
														{
															"key": "latest_only",
															"value": "<boolean>",
															"description": "Only return the latest version of each artifact"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
														},
														{
															"key": "slug",
															"value": "<string>",
															"description": "(Required) Artifact slug"
														}
													]
												},
												"description": "Returns a list of all task-script artifacts given a namespace and slug"
											},
											"response": [
												{
													"name": "Successfully fetched TaskScriptObject list",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "ts-auth-token",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug?latest_only=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"task-scripts",
																":namespace",
																":slug"
															],
															"query": [
																{
																	"key": "latest_only",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"sdkVersion\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"sdkVersion\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												},
												{
													"name": "Not found or not visible to user",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "ts-auth-token",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace/:slug?latest_only=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"task-scripts",
																":namespace",
																":slug"
															],
															"query": [
																{
																	"key": "latest_only",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "List all task-scripts for a namespace",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace?latest_only=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"artifacts",
												"task-scripts",
												":namespace"
											],
											"query": [
												{
													"key": "latest_only",
													"value": "<boolean>",
													"description": "Only return the latest version of each artifact"
												}
											],
											"variable": [
												{
													"key": "namespace",
													"value": "<string>",
													"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
												}
											]
										},
										"description": "Returns a list of all task-script artifacts given a namespace"
									},
									"response": [
										{
											"name": "Successfully fetched TaskScriptObject list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace?latest_only=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"artifacts",
														"task-scripts",
														":namespace"
													],
													"query": [
														{
															"key": "latest_only",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"sdkVersion\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"sdkVersion\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
										},
										{
											"name": "Not found or not visible to user",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/artifacts/task-scripts/:namespace?latest_only=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"artifacts",
														"task-scripts",
														":namespace"
													],
													"query": [
														{
															"key": "latest_only",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "List all task-scripts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifacts/task-scripts?namespace_type=<string>&latest_only=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifacts",
										"task-scripts"
									],
									"query": [
										{
											"key": "namespace_type",
											"value": "<string>",
											"description": "Namespace type of artifacts to be returned ('common', 'client', or 'private')"
										},
										{
											"key": "latest_only",
											"value": "<boolean>",
											"description": "Only return the latest version of each artifact"
										}
									]
								},
								"description": "Returns a list of all task-script artifacts, optionally filtered by namespace type"
							},
							"response": [
								{
									"name": "Successfully fetched TaskScriptObject list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/artifacts/task-scripts?namespace_type=<string>&latest_only=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"artifacts",
												"task-scripts"
											],
											"query": [
												{
													"key": "namespace_type",
													"value": "<string>"
												},
												{
													"key": "latest_only",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"sdkVersion\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"sdkVersion\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "Search for items",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifacts/task-scripts/search?value=<string>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifacts",
										"task-scripts",
										"search"
									],
									"query": [
										{
											"key": "value",
											"value": "<string>",
											"description": "(Required) The search string"
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of results to return"
										}
									]
								},
								"description": "Search for items using specified criteria"
							},
							"response": [
								{
									"name": "A list of items that match the search query",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/artifacts/task-scripts/search?value=<string>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"artifacts",
												"task-scripts",
												"search"
											],
											"query": [
												{
													"key": "value",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"sdkVersion\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"sdkVersion\": \"<string>\",\n    \"hash\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "ids",
					"item": [
						{
							"name": "{namespace}",
							"item": [
								{
									"name": "{slug}",
									"item": [
										{
											"name": "{version}",
											"item": [
												{
													"name": "files",
													"item": [
														{
															"name": "Get available file slugs for IDS",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/files",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"ids",
																		":namespace",
																		":slug",
																		":version",
																		"files"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																},
																"description": "Returns which file slugs are available to retrieve for this IDS"
															},
															"response": [
																{
																	"name": "Successfully fetched available IDS Ffle slugs",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/files",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"ids",
																				":namespace",
																				":slug",
																				":version",
																				"files"
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
																},
																{
																	"name": "Incorrect input provided",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/files",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"ids",
																				":namespace",
																				":slug",
																				":version",
																				"files"
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																},
																{
																	"name": "Not found or not visible to user",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/files",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"ids",
																				":namespace",
																				":slug",
																				":version",
																				"files"
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Get contents for an IDS file",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"ids",
																		":namespace",
																		":slug",
																		":version",
																		"files",
																		":fileSlug"
																	],
																	"query": [
																		{
																			"key": "download",
																			"value": "<boolean>",
																			"description": "If set to true, return a download url"
																		}
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		},
																		{
																			"key": "fileSlug",
																			"value": "<string>",
																			"description": "(Required) File slug corresponding to file within an IDS"
																		}
																	]
																},
																"description": "Returns the file contents for an IDS file given a namespace, slug, version, and file slug"
															},
															"response": [
																{
																	"name": "Successfully fetched file",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"ids",
																				":namespace",
																				":slug",
																				":version",
																				"files",
																				":fileSlug"
																			],
																			"query": [
																				{
																					"key": "download",
																					"value": "<boolean>"
																				}
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				},
																				{
																					"key": "fileSlug",
																					"value": "<string>",
																					"description": "(Required) File slug corresponding to file within an IDS"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"url\": \"<string>\"\n}"
																},
																{
																	"name": "Incorrect input provided",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"ids",
																				":namespace",
																				":slug",
																				":version",
																				"files",
																				":fileSlug"
																			],
																			"query": [
																				{
																					"key": "download",
																					"value": "<boolean>"
																				}
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				},
																				{
																					"key": "fileSlug",
																					"value": "<string>",
																					"description": "(Required) File slug corresponding to file within an IDS"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																},
																{
																	"name": "Not found or not visible to user",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "ts-auth-token",
																				"value": "<API Key>"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/files/:fileSlug?download=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"artifacts",
																				"ids",
																				":namespace",
																				":slug",
																				":version",
																				"files",
																				":fileSlug"
																			],
																			"query": [
																				{
																					"key": "download",
																					"value": "<boolean>"
																				}
																			],
																			"variable": [
																				{
																					"key": "namespace",
																					"value": "<string>",
																					"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																				},
																				{
																					"key": "slug",
																					"value": "<string>",
																					"description": "(Required) Artifact slug"
																				},
																				{
																					"key": "version",
																					"value": "<string>",
																					"description": "(Required) Artifact version"
																				},
																				{
																					"key": "fileSlug",
																					"value": "<string>",
																					"description": "(Required) File slug corresponding to file within an IDS"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														}
													]
												},
												{
													"name": "Get single IDS",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"ids",
																":namespace",
																":slug",
																":version"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																},
																{
																	"key": "version",
																	"value": "<string>",
																	"description": "(Required) Artifact version"
																}
															]
														},
														"description": "Returns a single IDS artifact matching the namespace, slug, and version"
													},
													"response": [
														{
															"name": "Successfully fetched IdsObject",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"ids",
																		":namespace",
																		":slug",
																		":version"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"type\": \"<string>\",\n  \"namespace\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"version\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"lastUpdatedAt\": \"<dateTime>\",\n  \"iconPresignedUrl\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"otherVersions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
														},
														{
															"name": "Not found or not visible to user",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"ids",
																		":namespace",
																		":slug",
																		":version"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Get artifacts related to IDS",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/relationships",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"ids",
																":namespace",
																":slug",
																":version",
																"relationships"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																},
																{
																	"key": "version",
																	"value": "<string>",
																	"description": "(Required) Artifact version"
																}
															]
														},
														"description": "Returns a list of the relationships a IDS artifact has with other artifacts"
													},
													"response": [
														{
															"name": "Successfully fetched Relationships",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/relationships",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"ids",
																		":namespace",
																		":slug",
																		":version",
																		"relationships"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"ids\": [\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ],\n  \"taskScripts\": [\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ],\n  \"protocols\": [\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"type\": \"<string>\",\n      \"namespace\": \"<string>\",\n      \"slug\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Not found or not visible to user",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/relationships",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"ids",
																		":namespace",
																		":slug",
																		":version",
																		"relationships"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Get labels for an IDS",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/labels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"ids",
																":namespace",
																":slug",
																":version",
																"labels"
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																},
																{
																	"key": "version",
																	"value": "<string>",
																	"description": "(Required) Artifact version"
																}
															]
														},
														"description": "Returns a list of the labels associated with a IDS artifact"
													},
													"response": [
														{
															"name": "Successfully fetched Labels",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/labels",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"ids",
																		":namespace",
																		":slug",
																		":version",
																		"labels"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"value\": \"<string>\"\n  }\n]"
														},
														{
															"name": "Not found or not visible to user",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "ts-auth-token",
																		"value": "<API Key>"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug/:version/labels",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"artifacts",
																		"ids",
																		":namespace",
																		":slug",
																		":version",
																		"labels"
																	],
																	"variable": [
																		{
																			"key": "namespace",
																			"value": "<string>",
																			"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": "(Required) Artifact slug"
																		},
																		{
																			"key": "version",
																			"value": "<string>",
																			"description": "(Required) Artifact version"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "Returns a list of IDS artifacts given a namespace and slug",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug?latest_only=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"artifacts",
														"ids",
														":namespace",
														":slug"
													],
													"query": [
														{
															"key": "latest_only",
															"value": "<boolean>",
															"description": "Only return the latest version of each artifact"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
														},
														{
															"key": "slug",
															"value": "<string>",
															"description": "(Required) Artifact slug"
														}
													]
												},
												"description": "Returns a list of all IDS artifacts given a namespace and slug"
											},
											"response": [
												{
													"name": "Successfully fetched IdsObject list",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "ts-auth-token",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug?latest_only=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"ids",
																":namespace",
																":slug"
															],
															"query": [
																{
																	"key": "latest_only",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"iconPresignedUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"iconPresignedUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
												},
												{
													"name": "Not found or not visible to user",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "ts-auth-token",
																"value": "<API Key>"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace/:slug?latest_only=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"artifacts",
																"ids",
																":namespace",
																":slug"
															],
															"query": [
																{
																	"key": "latest_only",
																	"value": "<boolean>"
																}
															],
															"variable": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": "(Required) Artifact slug"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "List all IDSes for namespace",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace?latest_only=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"artifacts",
												"ids",
												":namespace"
											],
											"query": [
												{
													"key": "latest_only",
													"value": "<boolean>",
													"description": "Only return the latest version of each artifact"
												}
											],
											"variable": [
												{
													"key": "namespace",
													"value": "<string>",
													"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
												}
											]
										},
										"description": "Returns a list of all IDS artifacts given a namespace"
									},
									"response": [
										{
											"name": "Successfully fetched IdsObject list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace?latest_only=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"artifacts",
														"ids",
														":namespace"
													],
													"query": [
														{
															"key": "latest_only",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"iconPresignedUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"iconPresignedUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
										},
										{
											"name": "Not found or not visible to user",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "ts-auth-token",
														"value": "<API Key>"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/artifacts/ids/:namespace?latest_only=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"artifacts",
														"ids",
														":namespace"
													],
													"query": [
														{
															"key": "latest_only",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "(Required) Artifact namespace. Should be common, private-*, or client-*"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "List all ids artifacts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifacts/ids?namespace_type=<string>&latest_only=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifacts",
										"ids"
									],
									"query": [
										{
											"key": "namespace_type",
											"value": "<string>",
											"description": "Namespace type of artifacts to be returned ('common', 'client', or 'private')"
										},
										{
											"key": "latest_only",
											"value": "<boolean>",
											"description": "Only return the latest version of each artifact"
										}
									]
								},
								"description": "Returns a list of all IDS artifacts, optionally filtered by namespace type"
							},
							"response": [
								{
									"name": "Successfully fetched IdsObject list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/artifacts/ids?namespace_type=<string>&latest_only=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"artifacts",
												"ids"
											],
											"query": [
												{
													"key": "namespace_type",
													"value": "<string>"
												},
												{
													"key": "latest_only",
													"value": "<boolean>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"iconPresignedUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"iconPresignedUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "Search for items",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/artifacts/ids/search?value=<string>&limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"artifacts",
										"ids",
										"search"
									],
									"query": [
										{
											"key": "value",
											"value": "<string>",
											"description": "(Required) The search string"
										},
										{
											"key": "limit",
											"value": "<integer>",
											"description": "The maximum number of results to return"
										}
									]
								},
								"description": "Search for items using specified criteria"
							},
							"response": [
								{
									"name": "A list of items that match the search query",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "ts-auth-token",
												"value": "<API Key>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/artifacts/ids/search?value=<string>&limit=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"artifacts",
												"ids",
												"search"
											],
											"query": [
												{
													"key": "value",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"iconPresignedUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"type\": \"<string>\",\n    \"namespace\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"version\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"lastUpdatedAt\": \"<dateTime>\",\n    \"iconPresignedUrl\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"otherVersions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({key: 'ts-auth-token', value: pm.collectionVariables.get(\"PersonalAccessToken\") });",
					"pm.request.headers.add({key: 'x-org-slug', value: pm.collectionVariables.get(\"OrgSlug\") });"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "DO_NOT_USE_enter_baseurl_here",
			"type": "string"
		},
		{
			"key": "PersonalAccessToken",
			"value": "DO_NOT_USE_enter_personal_token_here",
			"type": "string"
		},
		{
			"key": "OrgSlug",
			"value": "DO_NOT_USEenter_org_slug_here",
			"type": "string"
		}
	]
}